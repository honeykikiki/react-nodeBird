{"ast":null,"code":"import { all, delay, fork, put, takeLatest, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_MY_INFO_FAILURE, CHANGE_NICKNAME_REQUEST } from '../reducers/user';\n\nfunction changeNicknameAPI(data) {\n  return axios.post('/api/changeNickname', data);\n}\n\nfunction* changeNickname(action) {\n  try {\n    // const result = yield call(changeNicknameAPI, action.data); // loginAPI의 매개변수는 ()안에 들어가지 않고 a,c,v, 배열형식으로 들어간다\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI(data) {\n  return axios.post('/api/follow', data);\n}\n\nfunction* follow(action) {\n  try {\n    // const result = yield call(followAPI, action.data); // loginAPI의 매개변수는 ()안에 들어가지 않고 a,c,v, 배열형식으로 들어간다\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unFollowAPI(data) {\n  return axios.post('/api/follow', data);\n}\n\nfunction* unFollow(action) {\n  try {\n    // const result = yield call(unFollowAPI, action.data); // loginAPI의 매개변수는 ()안에 들어가지 않고 a,c,v, 배열형식으로 들어간다\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadMyInfoAPI(data) {\n  return axios.get('/user', data);\n}\n\nfunction* loadMyInfo(action) {\n  try {\n    const result = yield call(loadMyInfoAPI, action.data);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* login(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logoutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logout() {\n  try {\n    const result = yield call(logoutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signupAPI(data) {\n  return axios.post('/user', data);\n}\n\nfunction* signup(action) {\n  try {\n    const result = yield call(signupAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS // data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnFollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unFollow);\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, login);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logout);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signup);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchChangeNickname), fork(watchLoadMyInfo), fork(watchFollow), fork(watchUnFollow), fork(watchLogin), fork(watchLogOut), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["/Users/heoseongjin/Desktop/node_bird/prepare/front/sagas/user.js"],"names":["all","delay","fork","put","takeLatest","call","axios","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","CHANGE_NICKNAME_REQUEST","changeNicknameAPI","data","post","changeNickname","action","type","err","error","response","followAPI","follow","unFollowAPI","unFollow","loadMyInfoAPI","get","loadMyInfo","result","console","logInAPI","login","logoutAPI","logout","signupAPI","signup","log","watchChangeNickname","watchLoadMyInfo","watchFollow","watchUnFollow","watchLogin","watchLogOut","watchSignUp","userSaga"],"mappings":"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","sourcesContent":["import { all, delay, fork, put, takeLatest, call } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport {\n  LOG_IN_REQUEST,\n  LOG_IN_SUCCESS,\n  LOG_IN_FAILURE,\n  LOG_OUT_REQUEST,\n  LOG_OUT_SUCCESS,\n  LOG_OUT_FAILURE,\n  SIGN_UP_REQUEST,\n  SIGN_UP_SUCCESS,\n  SIGN_UP_FAILURE,\n  FOLLOW_REQUEST,\n  FOLLOW_SUCCESS,\n  FOLLOW_FAILURE,\n  UNFOLLOW_REQUEST,\n  UNFOLLOW_SUCCESS,\n  UNFOLLOW_FAILURE,\n  LOAD_MY_INFO_REQUEST,\n  LOAD_MY_INFO_SUCCESS,\n  LOAD_MY_INFO_FAILURE,\n  CHANGE_NICKNAME_REQUEST,\n} from '../reducers/user';\n\nfunction changeNicknameAPI(data) {\n  return axios.post('/api/changeNickname', data);\n}\n\nfunction* changeNickname(action) {\n  try {\n    // const result = yield call(changeNicknameAPI, action.data); // loginAPI의 매개변수는 ()안에 들어가지 않고 a,c,v, 배열형식으로 들어간다\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data,\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction followAPI(data) {\n  return axios.post('/api/follow', data);\n}\n\nfunction* follow(action) {\n  try {\n    // const result = yield call(followAPI, action.data); // loginAPI의 매개변수는 ()안에 들어가지 않고 a,c,v, 배열형식으로 들어간다\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data,\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction unFollowAPI(data) {\n  return axios.post('/api/follow', data);\n}\n\nfunction* unFollow(action) {\n  try {\n    // const result = yield call(unFollowAPI, action.data); // loginAPI의 매개변수는 ()안에 들어가지 않고 a,c,v, 배열형식으로 들어간다\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data,\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadMyInfoAPI(data) {\n  return axios.get('/user', data);\n}\n\nfunction* loadMyInfo(action) {\n  try {\n    const result = yield call(loadMyInfoAPI, action.data);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* login(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction logoutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logout() {\n  try {\n    const result = yield call(logoutAPI);\n\n    yield put({\n      type: LOG_OUT_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction signupAPI(data) {\n  return axios.post('/user', data);\n}\n\nfunction* signup(action) {\n  try {\n    const result = yield call(signupAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n      // data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnFollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unFollow);\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, login);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logout);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signup);\n}\n\nexport default function* userSaga() {\n  yield all([\n    fork(watchChangeNickname),\n    fork(watchLoadMyInfo),\n    fork(watchFollow),\n    fork(watchUnFollow),\n    fork(watchLogin),\n    fork(watchLogOut),\n    fork(watchSignUp),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}