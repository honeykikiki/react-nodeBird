{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(login),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(logout),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(signup),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchFollow),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(watchUnFollow),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogin),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogOut),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchSignUp),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { all, delay, fork, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, FOLLOW_REQUEST, UNFOLLOW_REQUEST } from '../reducers/user';\n\nfunction loginAPI(data) {\n  return axios.post('/api/login', data);\n}\n\nfunction login(action) {\n  return _regeneratorRuntime.wrap(function login$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          // const result = yield call(loginAPI, action.data); // loginAPI의 매개변수는 ()안에 들어가지 않고 a,c,v, 배열형식으로 들어간다\n          console.log('sagalogin');\n          _context.next = 4;\n          return delay(1000);\n\n        case 4:\n          _context.next = 6;\n          return put({\n            type: LOG_IN_SUCCESS,\n            data: action.data // data: result.data,\n\n          });\n\n        case 6:\n          _context.next = 12;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put({\n            type: LOG_IN_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction logoutAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction logout() {\n  return _regeneratorRuntime.wrap(function logout$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context2.next = 5;\n          return put({\n            type: LOG_OUT_SUCCESS // data: result.data,\n\n          });\n\n        case 5:\n          _context2.next = 11;\n          break;\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 11;\n          return put({\n            type: LOG_OUT_FAILURE,\n            error: _context2.t0.response.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 7]]);\n}\n\nfunction signupAPI() {\n  return axios.post('/api/signup');\n}\n\nfunction signup() {\n  return _regeneratorRuntime.wrap(function signup$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context3.next = 5;\n          return put({\n            type: SIGN_UP_SUCCESS // data: result.data,\n\n          });\n\n        case 5:\n          _context3.next = 11;\n          break;\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 11;\n          return put({\n            type: SIGN_UP_FAILURE,\n            error: _context3.t0.response.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 7]]);\n}\n\nfunction watchFollow() {\n  return _regeneratorRuntime.wrap(function watchFollow$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(FOLLOW_REQUEST, follow);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction watchUnFollow() {\n  return _regeneratorRuntime.wrap(function watchUnFollow$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeLatest(UNFOLLOW_REQUEST, unFollow);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(LOG_IN_REQUEST, login);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction watchLogOut() {\n  return _regeneratorRuntime.wrap(function watchLogOut$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeLatest(LOG_OUT_REQUEST, logout);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(SIGN_UP_REQUEST, signup);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return all([fork(watchFollow), fork(watchUnFollow), fork(watchLogin), fork(watchLogOut), fork(watchSignUp)]);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}","map":{"version":3,"sources":["/Users/heoseongjin/Desktop/node_bird/prepare/front/sagas/user.js"],"names":["login","logout","signup","watchFollow","watchUnFollow","watchLogin","watchLogOut","watchSignUp","userSaga","all","delay","fork","put","takeLatest","axios","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","UNFOLLOW_REQUEST","loginAPI","data","post","action","console","log","type","error","response","logoutAPI","signupAPI","follow","unFollow"],"mappings":"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","sourcesContent":["import { all, delay, fork, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport {\n  LOG_IN_REQUEST,\n  LOG_IN_SUCCESS,\n  LOG_IN_FAILURE,\n  LOG_OUT_REQUEST,\n  LOG_OUT_SUCCESS,\n  LOG_OUT_FAILURE,\n  SIGN_UP_REQUEST,\n  SIGN_UP_SUCCESS,\n  SIGN_UP_FAILURE,\n  FOLLOW_REQUEST,\n  UNFOLLOW_REQUEST,\n} from '../reducers/user';\n\nfunction loginAPI(data) {\n  return axios.post('/api/login', data);\n}\n\nfunction* login(action) {\n  try {\n    // const result = yield call(loginAPI, action.data); // loginAPI의 매개변수는 ()안에 들어가지 않고 a,c,v, 배열형식으로 들어간다\n    console.log('sagalogin');\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data,\n      // data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction logoutAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction* logout() {\n  try {\n    // const result = yield call(logoutAPI);\n    yield delay(1000);\n\n    yield put({\n      type: LOG_OUT_SUCCESS,\n      // data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction signupAPI() {\n  return axios.post('/api/signup');\n}\n\nfunction* signup() {\n  try {\n    // const result = yield call(signupAPI);\n    yield delay(1000);\n\n    yield put({\n      type: SIGN_UP_SUCCESS,\n      // data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnFollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unFollow);\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, login);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logout);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signup);\n}\n\nexport default function* userSaga() {\n  yield all([\n    fork(watchFollow),\n    fork(watchUnFollow),\n    fork(watchLogin),\n    fork(watchLogOut),\n    fork(watchSignUp),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}