{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/heoseongjin/Desktop/node_bird/prepare/front/pages/post/[id].js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport { useSelector } from 'react-redux';\nimport Head from 'next/head';\nimport AppLayout from '../../components/Applayout';\nimport PostCard from '../../components/PostCard';\n\nvar Post = function Post() {\n  _s();\n\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      singlePost = _useSelector.singlePost;\n\n  return __jsx(React.Fragment, null, __jsx(AppLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, singlePost.User.nickname, \"\\uB2D8\\uC758 \\uAE00\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: singlePost.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }), __jsx(\"meta\", {\n    property: \"og.title\",\n    content: \"\".concat(singlePost.nickname, \"\\uC758 \\uAC8C\\uC2DC\\uBB3C\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }), __jsx(\"meta\", {\n    property: \"og.description\",\n    content: singlePost.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }), __jsx(\"meta\", {\n    property: \"og.image\",\n    content: singlePost.Image[0] ? singlePost === null || singlePost === void 0 ? void 0 : singlePost.Image[0].src : 'https://nodebird.com/favicon.ico',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }), __jsx(\"meta\", {\n    property: \"og.url\",\n    content: \"https://nodebird.com/post/\".concat(id),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  })), __jsx(PostCard, {\n    post: singlePost,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(Post, \"mnFtsSWNkMUCzNZlr05ZwL2ppco=\", false, function () {\n  return [useRouter, useSelector];\n});\n\n_c = Post;\nexport var __N_SSP = true;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/heoseongjin/Desktop/node_bird/prepare/front/pages/post/[id].js"],"names":["React","useRouter","useSelector","Head","AppLayout","PostCard","Post","router","id","query","state","post","singlePost","User","nickname","content","Image","src"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAGA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAIA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;;AAGA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACjB,MAAMC,MAAM,GAAGN,SAAS,EAAxB;AACA,MAAQO,EAAR,GAAeD,MAAM,CAACE,KAAtB,CAAQD,EAAR;;AACA,qBAAuBN,WAAW,CAAC,UAACQ,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAAlC;AAAA,MAAQC,UAAR,gBAAQA,UAAR;;AAEA,SACE,4BACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,UAAU,CAACC,IAAX,CAAgBC,QADnB,wBADF,EAKE;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,OAAO,EAAEF,UAAU,CAACG,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME;AAAM,IAAA,QAAQ,EAAC,UAAf;AAA0B,IAAA,OAAO,YAAKH,UAAU,CAACE,QAAhB,8BAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE;AAAM,IAAA,QAAQ,EAAC,gBAAf;AAAgC,IAAA,OAAO,EAAEF,UAAU,CAACG,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE;AACE,IAAA,QAAQ,EAAC,UADX;AAEE,IAAA,OAAO,EACLH,UAAU,CAACI,KAAX,CAAiB,CAAjB,IAAsBJ,UAAtB,aAAsBA,UAAtB,uBAAsBA,UAAU,CAAEI,KAAZ,CAAkB,CAAlB,EAAqBC,GAA3C,GAAiD,kCAHrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAcE;AAAM,IAAA,QAAQ,EAAC,QAAf;AAAwB,IAAA,OAAO,sCAA+BT,EAA/B,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CADF,EAiBE,MAAC,QAAD;AAAU,IAAA,IAAI,EAAEI,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CADF,CADF;AAuBD,CA5BD;;GAAMN,I;UACWL,S,EAEQC,W;;;KAHnBI,I;;AA+CN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport { useRouter } from 'next/router';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport { useSelector } from 'react-redux';\nimport Head from 'next/head';\n\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\nimport AppLayout from '../../components/Applayout';\nimport PostCard from '../../components/PostCard';\nimport wrapper from '../../store/configureStore';\n\nconst Post = () => {\n  const router = useRouter();\n  const { id } = router.query;\n  const { singlePost } = useSelector((state) => state.post);\n\n  return (\n    <>\n      <AppLayout>\n        <Head>\n          <title>\n            {singlePost.User.nickname}\n            님의 글\n          </title>\n          <meta name=\"description\" content={singlePost.content} />\n          <meta property=\"og.title\" content={`${singlePost.nickname}의 게시물`} />\n          <meta property=\"og.description\" content={singlePost.content} />\n          <meta\n            property=\"og.image\"\n            content={\n              singlePost.Image[0] ? singlePost?.Image[0].src : 'https://nodebird.com/favicon.ico'\n            }\n          />\n          <meta property=\"og.url\" content={`https://nodebird.com/post/${id}`} />\n        </Head>\n        <PostCard post={singlePost} />\n      </AppLayout>\n    </>\n  );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps((store) => async ({ req, params }) => {\n  const cookie = req ? req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n  if (req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n  store.dispatch({\n    type: LOAD_MY_INFO_REQUEST,\n  });\n  store.dispatch({\n    type: LOAD_POST_REQUEST,\n    data: params.id,\n  });\n  store.dispatch(END);\n  await store.sagaTask.toPromise();\n});\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}