{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/heoseongjin/Desktop/node_bird/prepare/front/components/PostForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useRef, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addPost, UPLOAD_IMAGES_REQUEST } from '../reducers/post';\nimport useInput from '../hooks/useInput';\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      addPostDone = _useSelector.addPostDone;\n\n  var dispatch = useDispatch();\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      text = _useInput2[0],\n      onChangeText = _useInput2[1],\n      setText = _useInput2[2]; // const onChangeText = useCallback((e) => {\n  //   setText(e.target.value);\n  // }, []);\n\n\n  useEffect(function () {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  var onSubmit = useCallback(function () {\n    dispatch(addPost(text));\n  }, [text]);\n  var imageInput = useRef();\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  var onChanfeImages = useCallback(function (e) {\n    console.log('images ', e.target.files);\n    var imageFormData = new FormData();\n    [].forEach.call(e.target.files, function (f) {\n      imageFormData.append('image', f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  }, []);\n  var onRemoveImages = useCallback(function (index) {\n    return function () {\n      dispatch({\n        type: REMOVE_IMAGE,\n        data: index\n      });\n    };\n  });\n  return __jsx(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C7\\uB098\\uC694?\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    name: \"image\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    onChange: onChanfeImages,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      \"float\": 'right'\n    },\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"\\uCA31\\uCA31\")), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, imagePaths.map(function (v, i) {\n    return __jsx(\"div\", {\n      key: v,\n      style: {\n        display: 'inline-block'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, __jsx(\"img\", {\n      src: \"http://localhost:3065/\".concat(v),\n      style: {\n        width: '200px'\n      },\n      alt: v,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      onClick: onRemoveImages(i),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }, \"\\uC81C\\uAC70\")));\n  })));\n};\n\n_s(PostForm, \"gLjb29x2zKxdJzMXI+7ag6wWm5A=\", false, function () {\n  return [useSelector, useDispatch, useInput];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["/Users/heoseongjin/Desktop/node_bird/prepare/front/components/PostForm.js"],"names":["React","useCallback","useRef","useEffect","Form","Input","Button","useSelector","useDispatch","addPost","UPLOAD_IMAGES_REQUEST","useInput","PostForm","state","post","imagePaths","addPostDone","dispatch","text","onChangeText","setText","onSubmit","imageInput","onClickImageUpload","current","click","onChanfeImages","e","console","log","target","files","imageFormData","FormData","forEach","call","f","append","type","data","onRemoveImages","index","REMOVE_IMAGE","margin","map","v","i","display","width"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { addPost, UPLOAD_IMAGES_REQUEST } from '../reducers/post';\nimport useInput from '../hooks/useInput';\n\nconst PostForm = () => {\n  const { imagePaths, addPostDone } = useSelector((state) => state.post);\n  const dispatch = useDispatch();\n\n  const [text, onChangeText, setText] = useInput('');\n  // const onChangeText = useCallback((e) => {\n  //   setText(e.target.value);\n  // }, []);\n\n  useEffect(() => {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n\n  const onSubmit = useCallback(() => {\n    dispatch(addPost(text));\n  }, [text]);\n\n  const imageInput = useRef();\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n\n  const onChanfeImages = useCallback((e) => {\n    console.log('images ', e.target.files);\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, (f) => {\n      imageFormData.append('image', f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData,\n    });\n  }, []);\n\n  const onRemoveImages = useCallback((index) => () => {\n    dispatch({\n      type: REMOVE_IMAGE,\n      data: index,\n    });\n  });\n  return (\n    <Form style={{ margin: '10px 0 20px' }} encType=\"multipart/form-data\" onFinish={onSubmit}>\n      <Input.TextArea\n        value={text}\n        onChange={onChangeText}\n        maxLength={140}\n        placeholder=\"어떤 신기한 일이 있엇나요?\"\n      />\n\n      <div>\n        <input\n          type=\"file\"\n          name=\"image\"\n          multiple\n          hidden\n          ref={imageInput}\n          onChange={onChanfeImages}\n        />\n        <Button onClick={onClickImageUpload}>이미지 업로드</Button>\n        <Button type=\"primary\" style={{ float: 'right' }} htmlType=\"submit\">\n          쨱쨱\n        </Button>\n      </div>\n\n      <div>\n        {imagePaths.map((v, i) => (\n          <div key={v} style={{ display: 'inline-block' }}>\n            <img src={`http://localhost:3065/${v}`} style={{ width: '200px' }} alt={v} />\n            <div>\n              <Button onClick={onRemoveImages(i)}>제거</Button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </Form>\n  );\n};\n\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}