{"ast":null,"code":"import { all, delay, fork, put, take, takeEvery, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_POST_SUCCES, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_COMMENT_SUCCES, ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST } from '../reducers/post';\n\nfunction addPostAPI(action) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_POST_SUCCESS // data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(action) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addCommentAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS // data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["/Users/heoseongjin/Desktop/node_bird/prepare/front/sagas/post.js"],"names":["all","delay","fork","put","take","takeEvery","takeLatest","axios","ADD_POST_SUCCES","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_COMMENT_SUCCES","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","addPostAPI","action","post","data","addPost","type","ADD_POST_SUCCESS","err","response","addCommentAPI","addComment","ADD_COMMENT_SUCCESS","watchAddPost","watchAddComment","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,KAAd,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,IAAhC,EAAsCC,SAAtC,EAAiDC,UAAjD,QAAmE,oBAAnE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SACEC,eADF,EAEEC,gBAFF,EAGEC,gBAHF,EAIEC,kBAJF,EAKEC,mBALF,EAMEC,mBANF,QAOO,kBAPP;;AASA,SAASC,UAAT,CAAoBC,MAApB,EAA4B;AAC1B,SAAOR,KAAK,CAACS,IAAN,CAAW,WAAX,EAAwBC,IAAxB,CAAP;AACD;;AAED,UAAUC,OAAV,CAAkBH,MAAlB,EAA0B;AACxB,MAAI;AACF;AACA,UAAMd,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAEC,gBADE,CAER;;AAFQ,KAAD,CAAT;AAID,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZ,UAAMlB,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAEV,gBADE;AAERQ,MAAAA,IAAI,EAAEI,GAAG,CAACC,QAAJ,CAAaL;AAFX,KAAD,CAAT;AAID;AACF;;AAED,SAASM,aAAT,CAAuBR,MAAvB,EAA+B;AAC7B,SAAOR,KAAK,CAACS,IAAN,CAAW,WAAX,EAAwBC,IAAxB,CAAP;AACD;;AAED,UAAUO,UAAV,CAAqBT,MAArB,EAA6B;AAC3B,MAAI;AACF;AACA,UAAMd,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAEM,mBADE,CAER;;AAFQ,KAAD,CAAT;AAID,GAPD,CAOE,OAAOJ,GAAP,EAAY;AACZ,UAAMlB,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAEP,mBADE;AAERK,MAAAA,IAAI,EAAEI,GAAG,CAACC,QAAJ,CAAaL;AAFX,KAAD,CAAT;AAID;AACF;;AAED,UAAUS,YAAV,GAAyB;AACvB,QAAMpB,UAAU,CAACI,gBAAD,EAAmBQ,OAAnB,CAAhB;AACD;;AAED,UAAUS,eAAV,GAA4B;AAC1B,QAAMrB,UAAU,CAACO,mBAAD,EAAsBW,UAAtB,CAAhB;AACD;;AAED,eAAe,UAAUI,QAAV,GAAqB;AAClC,QAAM5B,GAAG,CAAC,CAACE,IAAI,CAACwB,YAAD,CAAL,EAAqBxB,IAAI,CAACyB,eAAD,CAAzB,CAAD,CAAT;AACD","sourcesContent":["import { all, delay, fork, put, take, takeEvery, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport {\n  ADD_POST_SUCCES,\n  ADD_POST_FAILURE,\n  ADD_POST_REQUEST,\n  ADD_COMMENT_SUCCES,\n  ADD_COMMENT_FAILURE,\n  ADD_COMMENT_REQUEST,\n} from '../reducers/post';\n\nfunction addPostAPI(action) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      // data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction addCommentAPI(action) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addCommentAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      // data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}\n"]},"metadata":{},"sourceType":"module"}