{"ast":null,"code":"import { HYDRATE } from 'next-redux-wrapper';\nimport { combineReducers } from 'redux';\nimport user from './user';\nimport post from './post'; // const changeNickname = (data) => {\n//   return {\n//     type: 'CHANGE_NICKNAME',\n//     data,\n//   };\n// };\n// changeNickname('kakaka');\n// const rootReducer = combineReducers({\n//   index: (state = {}, action) => {\n//     switch (action.type) {\n//       case HYDRATE:\n//         console.log('HYDRATE', action);\n//         return {\n//           ...state,\n//           ...action.payload,\n//         };\n//       default:\n//         return state;\n//     }\n//   },\n//   user,\n//   post,\n// });\n\nvar rootReducer = function rootReducer(state, action) {\n  switch (action.type) {\n    default:\n      var combineReducer = combineReducers({\n        user: user,\n        post: post\n      });\n      return combineReducer(state, action);\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/heoseongjin/Desktop/node_bird/prepare/front/reducers/index.js"],"names":["HYDRATE","combineReducers","user","post","rootReducer","state","action","type","combineReducer"],"mappings":"AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,eAAT,QAAgC,OAAhC;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE;AACE,UAAMC,cAAc,GAAGP,eAAe,CAAC;AACrCC,QAAAA,IAAI,EAAJA,IADqC;AAErCC,QAAAA,IAAI,EAAJA;AAFqC,OAAD,CAAtC;AAIA,aAAOK,cAAc,CAACH,KAAD,EAAQC,MAAR,CAArB;AANJ;AAQD,CATD;;AAWA,eAAeF,WAAf","sourcesContent":["import { HYDRATE } from 'next-redux-wrapper';\nimport { combineReducers } from 'redux';\n\nimport user from './user';\nimport post from './post';\n\n// const changeNickname = (data) => {\n//   return {\n//     type: 'CHANGE_NICKNAME',\n//     data,\n//   };\n// };\n\n// changeNickname('kakaka');\n\n// const rootReducer = combineReducers({\n//   index: (state = {}, action) => {\n//     switch (action.type) {\n//       case HYDRATE:\n//         console.log('HYDRATE', action);\n//         return {\n//           ...state,\n//           ...action.payload,\n//         };\n\n//       default:\n//         return state;\n//     }\n//   },\n//   user,\n//   post,\n// });\n\nconst rootReducer = (state, action) => {\n  switch (action.type) {\n    default:\n      const combineReducer = combineReducers({\n        user,\n        post,\n      });\n      return combineReducer(state, action);\n  }\n};\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}