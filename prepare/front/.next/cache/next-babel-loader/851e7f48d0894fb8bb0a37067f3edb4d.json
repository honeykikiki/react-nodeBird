{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport useSWR from 'swr';\nimport Router from 'next/router';\nimport AppLayout from '../components/Applayout';\nimport NicknameEditForm from '../components/NicknameEditForm';\nimport FollowList from '../components/FollowList';\nimport wrapper from '../store/configureStore';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\n\nconst fetcher = url => axios.get(url, {\n  withCredentials: true\n}).then(result => result.data);\n\nconst Profile = () => {\n  // const dispatch = useDispatch();\n  const {\n    0: followersLimit,\n    1: setFollowersLimit\n  } = useState(3);\n  const {\n    0: followingsLimit,\n    1: setFollowingsLimit\n  } = useState(3);\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    data: followingsData,\n    error: followingError\n  } = useSWR(`http://localhost:3065/user/followings?limit=${followersLimit}`, fetcher);\n  const {\n    data: followersData,\n    error: followerError\n  } = useSWR(`http://localhost:3065/user/followers?limit=${followingsLimit}`, fetcher); // useEffect(() => {\n  //   dispatch({\n  //     type: LOAD_FOLLOWERS_REQUEST,\n  //   });\n  //   dispatch({\n  //     type: LOAD_FOLLOWINGS_REQUEST,\n  //   });\n  // }, []);\n\n  useEffect(() => {\n    if (!(me && me.id)) {\n      Router.push('/');\n    }\n  }, [me && me.id]);\n  const loadMortFollowings = useCallback(() => {\n    setFollowingsLimit(prev => prev + 3);\n  }, []);\n  const loadMortFollowers = useCallback(() => {\n    setFollowersLimit(prev => prev + 3);\n  }, []);\n\n  if (!me) {\n    return `내정보 로딩중...`;\n  }\n\n  if (followerError || followingError) {\n    console.error(followerError || followingError);\n    return __jsx(\"div\", null, \"\\uD314\\uB85C\\uC77C || \\uD314\\uB85C\\uC6CC \\uC911 \\uC5D0\\uB7EC \\uBC1C\\uC0DD\");\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"meta\", {\n    charSet: \"utf-8\"\n  }), __jsx(\"title\", null, \"\\uB0B4 \\uD504\\uB85C\\uD544 | NodeBird\")), __jsx(AppLayout, null, __jsx(NicknameEditForm, null), __jsx(FollowList, {\n    header: \"\\uD314\\uB85C\\uC789 \\uBAA9\\uB85D\",\n    data: followingsData,\n    onClickMore: loadMortFollowings,\n    loading: !followingError && !followingsData\n  }), __jsx(FollowList, {\n    header: \"\\uD314\\uB85C\\uC6CC \\uBAA9\\uB85D\",\n    data: followersData,\n    onClickMore: loadMortFollowers,\n    loading: !followerError && !followersData\n  })));\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(store => async ({\n  req\n}) => {\n  // 로그인이 풀리는 현상, 서버에서 공유하지 않는 쿠키만들기\n  const cookie = req ? req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  store.dispatch(END);\n  await store.sagaTask.toPromise();\n});\nexport default Profile;","map":null,"metadata":{},"sourceType":"module"}