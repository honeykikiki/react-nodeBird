{"ast":null,"code":"var _jsxFileName = \"/Users/heoseongjin/Desktop/node_bird/prepare/front/components/PostCard.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { Card, Button, Avatar, Popover } from 'antd';\nimport PropTypes from 'prop-types';\nimport { RetweetOutlined, HeartOutlined, HeartTwoTone, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nimport PostImages from './PostImages';\n\nconst PostCard = ({\n  post\n}) => {\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const id = useSelector(state => state.user.me && state.user.me.id);\n  const onToggleLike = useCallback(() => {\n    setLiked(prev => !prev);\n  }, []);\n  return __jsx(\"div\", {\n    style: {\n      marginBottom: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      Images: post.Images,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 34\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }), liked ? __jsx(HeartTwoTone, {\n      twoToneColor: \"red\",\n      key: \"heart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      onClick: onToggleLike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }), __jsx(Popover, {\n      key: \"ellipsis\",\n      content: __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 19\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }\n    }, post.User.nickname),\n    title: post.User.nicknames,\n    description: post.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  })));\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    user: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["/Users/heoseongjin/Desktop/node_bird/prepare/front/components/PostCard.js"],"names":["React","useState","useCallback","Card","Button","Avatar","Popover","PropTypes","RetweetOutlined","HeartOutlined","HeartTwoTone","MessageOutlined","EllipsisOutlined","useSelector","PostImages","PostCard","post","liked","setLiked","commentFormOpened","setCommentFormOpened","id","state","user","me","onToggleLike","prev","marginBottom","Images","User","nickname","nicknames","content","propTypes","shape","number","object","string","createdAt","comments","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Card, Button, Avatar, Popover } from 'antd';\nimport PropTypes from 'prop-types';\nimport {\n  RetweetOutlined,\n  HeartOutlined,\n  HeartTwoTone,\n  MessageOutlined,\n  EllipsisOutlined,\n} from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nimport PostImages from './PostImages';\n\nconst PostCard = ({ post }) => {\n  const [liked, setLiked] = useState(false);\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\n\n  const id = useSelector((state) => state.user.me && state.user.me.id);\n\n  const onToggleLike = useCallback(() => {\n    setLiked((prev) => !prev);\n  }, []);\n  return (\n    <div style={{ marginBottom: '10px' }}>\n      <Card\n        cover={post.Images[0] && <PostImages Images={post.Images} />}\n        actions={[\n          <RetweetOutlined key=\"retweet\" />,\n          liked ? (\n            <HeartTwoTone twoToneColor=\"red\" key=\"heart\" />\n          ) : (\n            <HeartOutlined key=\"heart\" onClick={onToggleLike} />\n          ),\n          <MessageOutlined key=\"comment\" onClick={onToggleLike} />,\n          <Popover\n            key=\"ellipsis\"\n            content={\n              <Button.Group>\n                {id && post.User.id === id ? (\n                  <>\n                    <Button>수정</Button>\n                    <Button type=\"danger\">삭제</Button>\n                  </>\n                ) : (\n                  <Button>신고</Button>\n                )}\n              </Button.Group>\n            }\n          >\n            <EllipsisOutlined />\n          </Popover>,\n        ]}\n      >\n        <Card.Meta\n          avatar={<Avatar>{post.User.nickname}</Avatar>}\n          title={post.User.nicknames}\n          description={post.content}\n        />\n      </Card>\n      {/* <CommentForm /> */}\n      {/* <Comments /> */}\n    </div>\n  );\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    user: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n};\n\nexport default PostCard;\n"]},"metadata":{},"sourceType":"module"}