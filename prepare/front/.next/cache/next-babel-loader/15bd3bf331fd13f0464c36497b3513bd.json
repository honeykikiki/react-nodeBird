{"ast":null,"code":"var _jsxFileName = \"/Users/heoseongjin/Desktop/node_bird/prepare/front/pages/user/[id].js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Avatar, Card } from 'antd';\nimport { END } from 'redux-saga';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { useInView } from 'react-intersection-observer';\nimport axios from 'axios';\nimport { LOAD_POSTS_REQUEST, LOAD_USER_POSTS_REQUEST } from '../../reducers/post';\nimport { LOAD_MY_INFO_REQUEST, LOAD_USER_REQUEST } from '../../reducers/user';\nimport PostCard from '../../components/PostCard';\nimport wrapper from '../../store/configureStore';\nimport AppLayout from '../../components/AppLayout';\n\nconst User = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostsLoading\n  } = useSelector(state => state.post);\n  const {\n    userInfo,\n    me\n  } = useSelector(state => state.user);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, userInfo && __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, userInfo.nickname, \"\\uB2D8\\uC758 \\uAE00\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: `${userInfo.nickname}님의 게시글`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: `${userInfo.nickname}님의 게시글`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: `${userInfo.nickname}님의 게시글`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: \"https://nodebird.com/favicon.ico\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: `https://nodebird.com/user/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  })), userInfo && userInfo.id !== (me === null || me === void 0 ? void 0 : me.id) ? __jsx(Card, {\n    style: {\n      marginBottom: 20\n    },\n    actions: [__jsx(\"div\", {\n      key: \"twit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, \"\\uC9F9\\uC9F9\", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }), userInfo.Posts), __jsx(\"div\", {\n      key: \"following\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, \"\\uD314\\uB85C\\uC789\", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }), userInfo.Followings), __jsx(\"div\", {\n      key: \"follower\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, \"\\uD314\\uB85C\\uC6CC\", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }), userInfo.Followers)],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 30\n      }\n    }, userInfo.nickname[0]),\n    title: userInfo.nickname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  })) : null, mainPosts.map(c => __jsx(PostCard, {\n    key: c.id,\n    post: c,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    ref: hasMorePosts && !loadPostsLoading ? ref : undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(store => async ({\n  req,\n  params\n}) => {\n  const cookie = req ? req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  store.dispatch({\n    type: LOAD_USER_POSTS_REQUEST,\n    data: params.id\n  });\n  store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  store.dispatch({\n    type: LOAD_USER_REQUEST,\n    data: params.id\n  });\n  store.dispatch(END);\n  await store.sagaTask.toPromise();\n});\nexport default User;","map":{"version":3,"sources":["/Users/heoseongjin/Desktop/node_bird/prepare/front/pages/user/[id].js"],"names":["React","useEffect","useDispatch","useSelector","Avatar","Card","END","Head","useRouter","useInView","axios","LOAD_POSTS_REQUEST","LOAD_USER_POSTS_REQUEST","LOAD_MY_INFO_REQUEST","LOAD_USER_REQUEST","PostCard","wrapper","AppLayout","User","dispatch","router","id","query","mainPosts","hasMorePosts","loadPostsLoading","state","post","userInfo","me","user","nickname","marginBottom","Posts","Followings","Followers","map","c","ref","undefined","getServerSideProps","store","req","params","cookie","headers","defaults","Cookie","type","data","sagaTask","toPromise"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,MAA7B;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,QAA0B,6BAA1B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,EAA6BC,uBAA7B,QAA4D,qBAA5D;AACA,SAASC,oBAAT,EAA+BC,iBAA/B,QAAwD,qBAAxD;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,QAAQ,GAAGjB,WAAW,EAA5B;AACA,QAAMkB,MAAM,GAAGZ,SAAS,EAAxB;AACA,QAAM;AAAEa,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB;AACA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,YAAb;AAA2BC,IAAAA;AAA3B,MAAgDtB,WAAW,CAAEuB,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAjE;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAmB1B,WAAW,CAAEuB,KAAD,IAAWA,KAAK,CAACI,IAAlB,CAApC;AAEA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QAAQ,IACP,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,QAAQ,CAACG,QADZ,wBADF,EAKE;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,OAAO,EAAG,GAAEH,QAAQ,CAACG,QAAS,QAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME;AAAM,IAAA,QAAQ,EAAC,UAAf;AAA0B,IAAA,OAAO,EAAG,GAAEH,QAAQ,CAACG,QAAS,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE;AAAM,IAAA,QAAQ,EAAC,gBAAf;AAAgC,IAAA,OAAO,EAAG,GAAEH,QAAQ,CAACG,QAAS,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE;AAAM,IAAA,QAAQ,EAAC,UAAf;AAA0B,IAAA,OAAO,EAAC,kCAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE;AAAM,IAAA,QAAQ,EAAC,QAAf;AAAwB,IAAA,OAAO,EAAG,6BAA4BV,EAAG,EAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CAFJ,EAcGO,QAAQ,IAAIA,QAAQ,CAACP,EAAT,MAAgBQ,EAAhB,aAAgBA,EAAhB,uBAAgBA,EAAE,CAAER,EAApB,CAAZ,GACC,MAAC,IAAD;AACE,IAAA,KAAK,EAAE;AAAEW,MAAAA,YAAY,EAAE;AAAhB,KADT;AAEE,IAAA,OAAO,EAAE,CACP;AAAK,MAAA,GAAG,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGGJ,QAAQ,CAACK,KAHZ,CADO,EAMP;AAAK,MAAA,GAAG,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGGL,QAAQ,CAACM,UAHZ,CANO,EAWP;AAAK,MAAA,GAAG,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGGN,QAAQ,CAACO,SAHZ,CAXO,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAoBE,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,MAAM,EAAE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASP,QAAQ,CAACG,QAAT,CAAkB,CAAlB,CAAT,CAAnB;AAA4D,IAAA,KAAK,EAAEH,QAAQ,CAACG,QAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,CADD,GAuBG,IArCN,EAsCGR,SAAS,CAACa,GAAV,CAAeC,CAAD,IACb,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,CAAC,CAAChB,EAAjB;AAAqB,IAAA,IAAI,EAAEgB,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAtCH,EAyCE;AAAK,IAAA,GAAG,EAAEb,YAAY,IAAI,CAACC,gBAAjB,GAAoCa,GAApC,GAA0CC,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzCF,CADF;AA6CD,CApDD;;AAsDA,OAAO,MAAMC,kBAAkB,GAAGxB,OAAO,CAACwB,kBAAR,CAA4BC,KAAD,IAAW,OAAO;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAP,KAA2B;AACjG,QAAMC,MAAM,GAAGF,GAAG,GAAGA,GAAG,CAACG,OAAJ,CAAYD,MAAf,GAAwB,EAA1C;AACAlC,EAAAA,KAAK,CAACoC,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgC,EAAhC;;AACA,MAAIL,GAAG,IAAIE,MAAX,EAAmB;AACjBlC,IAAAA,KAAK,CAACoC,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgCH,MAAhC;AACD;;AACDH,EAAAA,KAAK,CAACtB,QAAN,CAAe;AACb6B,IAAAA,IAAI,EAAEpC,uBADO;AAEbqC,IAAAA,IAAI,EAAEN,MAAM,CAACtB;AAFA,GAAf;AAIAoB,EAAAA,KAAK,CAACtB,QAAN,CAAe;AACb6B,IAAAA,IAAI,EAAEnC;AADO,GAAf;AAGA4B,EAAAA,KAAK,CAACtB,QAAN,CAAe;AACb6B,IAAAA,IAAI,EAAElC,iBADO;AAEbmC,IAAAA,IAAI,EAAEN,MAAM,CAACtB;AAFA,GAAf;AAIAoB,EAAAA,KAAK,CAACtB,QAAN,CAAeb,GAAf;AACA,QAAMmC,KAAK,CAACS,QAAN,CAAeC,SAAf,EAAN;AACD,CAnBiC,CAA3B;AAqBP,eAAejC,IAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Avatar, Card } from 'antd';\nimport { END } from 'redux-saga';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { useInView } from 'react-intersection-observer';\n\nimport axios from 'axios';\nimport { LOAD_POSTS_REQUEST, LOAD_USER_POSTS_REQUEST } from '../../reducers/post';\nimport { LOAD_MY_INFO_REQUEST, LOAD_USER_REQUEST } from '../../reducers/user';\nimport PostCard from '../../components/PostCard';\nimport wrapper from '../../store/configureStore';\nimport AppLayout from '../../components/AppLayout';\n\nconst User = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const { id } = router.query;\n  const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector((state) => state.post);\n  const { userInfo, me } = useSelector((state) => state.user);\n\n  return (\n    <AppLayout>\n      {userInfo && (\n        <Head>\n          <title>\n            {userInfo.nickname}\n            님의 글\n          </title>\n          <meta name=\"description\" content={`${userInfo.nickname}님의 게시글`} />\n          <meta property=\"og:title\" content={`${userInfo.nickname}님의 게시글`} />\n          <meta property=\"og:description\" content={`${userInfo.nickname}님의 게시글`} />\n          <meta property=\"og:image\" content=\"https://nodebird.com/favicon.ico\" />\n          <meta property=\"og:url\" content={`https://nodebird.com/user/${id}`} />\n        </Head>\n      )}\n      {userInfo && userInfo.id !== me?.id ? (\n        <Card\n          style={{ marginBottom: 20 }}\n          actions={[\n            <div key=\"twit\">\n              짹짹\n              <br />\n              {userInfo.Posts}\n            </div>,\n            <div key=\"following\">\n              팔로잉\n              <br />\n              {userInfo.Followings}\n            </div>,\n            <div key=\"follower\">\n              팔로워\n              <br />\n              {userInfo.Followers}\n            </div>,\n          ]}\n        >\n          <Card.Meta avatar={<Avatar>{userInfo.nickname[0]}</Avatar>} title={userInfo.nickname} />\n        </Card>\n      ) : null}\n      {mainPosts.map((c) => (\n        <PostCard key={c.id} post={c} />\n      ))}\n      <div ref={hasMorePosts && !loadPostsLoading ? ref : undefined} />\n    </AppLayout>\n  );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps((store) => async ({ req, params }) => {\n  const cookie = req ? req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n  if (req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n  store.dispatch({\n    type: LOAD_USER_POSTS_REQUEST,\n    data: params.id,\n  });\n  store.dispatch({\n    type: LOAD_MY_INFO_REQUEST,\n  });\n  store.dispatch({\n    type: LOAD_USER_REQUEST,\n    data: params.id,\n  });\n  store.dispatch(END);\n  await store.sagaTask.toPromise();\n});\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}