{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/heoseongjin/Desktop/node_bird/prepare/front/components/CommnetForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Form } from 'antd';\nimport React, { useCallback } from 'react';\nimport useInput from '../hooks/useInput';\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useInput = useInput(),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      commentText = _useInput2[0],\n      setCommentText = _useInput2[1];\n\n  var onSubmitComment = useCallback(function () {}, [commentText]);\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, \"\\uD3FC\"));\n};\n\n_s(CommentForm, \"/kIsd8zoAAhDPmXMZv00ID9lumU=\", false, function () {\n  return [useInput];\n});\n\n_c = CommentForm;\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["/Users/heoseongjin/Desktop/node_bird/prepare/front/components/CommnetForm.js"],"names":["Form","React","useCallback","useInput","CommentForm","post","commentText","setCommentText","onSubmitComment"],"mappings":";;;;;;;AAAA,SAASA,IAAT,QAAqB,MAArB;AACA,OAAOC,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,QAAP,MAAqB,mBAArB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAChC,kBAAsCF,QAAQ,EAA9C;AAAA;AAAA,MAAOG,WAAP;AAAA,MAAoBC,cAApB;;AACA,MAAMC,eAAe,GAAGN,WAAW,CAAC,YAAM,CAAE,CAAT,EAAW,CAACI,WAAD,CAAX,CAAnC;AACA,SACE,4BACE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEE,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF;AAKD,CARD;;GAAMJ,W;UACkCD,Q;;;KADlCC,W;AAUN,eAAeA,WAAf","sourcesContent":["import { Form } from 'antd';\nimport React, { useCallback } from 'react';\nimport useInput from '../hooks/useInput';\n\nconst CommentForm = ({ post }) => {\n  const [commentText, setCommentText] = useInput();\n  const onSubmitComment = useCallback(() => {}, [commentText]);\n  return (\n    <>\n      <Form onFinish={onSubmitComment}>Ìèº</Form>\n    </>\n  );\n};\n\nexport default CommentForm;\n"]},"metadata":{},"sourceType":"module"}