{"ast":null,"code":"import { all, delay, fork, put, take, takeEvery, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction addPostAPI(action) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: 'ADD_POST_SUCCESS' // data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: 'ADD_POST_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest('ADD_POST_REQUEST', addPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost)]);\n}","map":{"version":3,"sources":["/Users/heoseongjin/Desktop/node_bird/prepare/front/sagas/post.js"],"names":["all","delay","fork","put","take","takeEvery","takeLatest","axios","addPostAPI","action","post","data","addPost","type","err","response","watchAddPost","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,KAAd,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,IAAhC,EAAsCC,SAAtC,EAAiDC,UAAjD,QAAmE,oBAAnE;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,UAAT,CAAoBC,MAApB,EAA4B;AAC1B,SAAOF,KAAK,CAACG,IAAN,CAAW,WAAX,EAAwBC,IAAxB,CAAP;AACD;;AAED,UAAUC,OAAV,CAAkBH,MAAlB,EAA0B;AACxB,MAAI;AACF;AACA,UAAMR,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAE,kBADE,CAER;;AAFQ,KAAD,CAAT;AAID,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZ,UAAMX,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAE,kBADE;AAERF,MAAAA,IAAI,EAAEG,GAAG,CAACC,QAAJ,CAAaJ;AAFX,KAAD,CAAT;AAID;AACF;;AAED,UAAUK,YAAV,GAAyB;AACvB,QAAMV,UAAU,CAAC,kBAAD,EAAqBM,OAArB,CAAhB;AACD;;AAED,eAAe,UAAUK,QAAV,GAAqB;AAClC,QAAMjB,GAAG,CAAC,CAACE,IAAI,CAACc,YAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { all, delay, fork, put, take, takeEvery, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction addPostAPI(action) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: 'ADD_POST_SUCCESS',\n      // data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: 'ADD_POST_FAILURE',\n      data: err.response.data,\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest('ADD_POST_REQUEST', addPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost)]);\n}\n"]},"metadata":{},"sourceType":"module"}