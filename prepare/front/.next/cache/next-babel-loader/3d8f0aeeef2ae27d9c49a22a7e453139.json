{"ast":null,"code":"import { all, delay, fork, put, takeLatest, throttle, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, REMOVE_POST_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE, LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_POST_FAILURE, LIKE_POST_REQUEST, LIKE_POST_SUCCESS, LIKE_POST_FAILURE, UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_FAILURE, RETWEET_REQUEST, RETWEET_SUCCESS, RETWEET_FAILURE, LOAD_USER_POSTS_REQUEST, LOAD_HASHTAG_POSTS_REQUEST, LOAD_USER_POSTS_SUCCESS, LOAD_USER_POSTS_FAILURE, LOAD_HASHTAG_POSTS_SUCCESS, LOAD_HASHTAG_POSTS_FAILURE } from '../reducers/post';\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\n\nfunction retweetAPI(data) {\n  return axios.post(`/post/${data}/retweet`);\n}\n\nfunction* retweet(action) {\n  try {\n    const result = yield call(retweetAPI, action.data);\n    yield put({\n      type: RETWEET_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    console.error(err);\n    yield put({\n      type: RETWEET_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction upLoadImagesAPI(data) {\n  return axios.post(`/post/images`, data);\n}\n\nfunction* upLoadImages(action) {\n  try {\n    const result = yield call(upLoadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LIKE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unlikePostAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\n\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadUserPostsAPI(data, lastId) {\n  return axios.get(`/user/${data}/posts?lastId=${lastId || 0}`);\n}\n\nfunction* loadUserPosts(action) {\n  try {\n    const result = yield call(loadUserPostsAPI, action.data, action.lastId);\n    yield put({\n      type: LOAD_USER_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_USER_POSTS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadHashtagPostsAPI(data, lastId) {\n  return axios.get(`/hashtag/${encodeURIComponent(data)}/posts?lastId=${lastId || 0}`);\n}\n\nfunction* loadHashtagPosts(action) {\n  try {\n    console.log('loadhash');\n    const result = yield call(loadHashtagPostsAPI, action.data, action.lastId);\n    yield put({\n      type: LOAD_HASHTAG_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_HASHTAG_POSTS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadPostsAPI(lastId) {\n  return axios.get(`/posts?lastId=${lastId || 0}`);\n}\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI, action.lastId);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadPostAPI(data) {\n  return axios.get(`/post/${data}`);\n}\n\nfunction* loadPost(action) {\n  try {\n    const result = yield call(loadPostAPI, action.data);\n    yield put({\n      type: LOAD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    console.error(err);\n    yield put({\n      type: LOAD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post('/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data); // POST /post/1/comment\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    console.log(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLoadPosts() {\n  yield throttle(5000, LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchLoadUserPosts() {\n  yield throttle(5000, LOAD_USER_POSTS_REQUEST, loadUserPosts);\n}\n\nfunction* watchLoadHashtagPosts() {\n  yield throttle(5000, LOAD_HASHTAG_POSTS_REQUEST, loadHashtagPosts);\n}\n\nfunction* watchLoadPost() {\n  yield takeLatest(LOAD_POST_REQUEST, loadPost);\n}\n\nfunction* watchRetweet() {\n  yield takeLatest(RETWEET_REQUEST, retweet);\n}\n\nfunction* watchupLoadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, upLoadImages);\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchUnLikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchRetweet), fork(watchupLoadImages), fork(watchLikePost), fork(watchUnLikePost), fork(watchAddPost), fork(watchAddComment), fork(watchRemovePost), fork(watchLoadUserPosts), fork(watchLoadHashtagPosts), fork(watchLoadPosts), fork(watchLoadPost)]);\n}","map":{"version":3,"sources":["/Users/heoseongjin/Desktop/node_bird/prepare/front/sagas/post.js"],"names":["all","delay","fork","put","takeLatest","throttle","call","axios","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","REMOVE_POST_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_HASHTAG_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","retweetAPI","data","post","retweet","action","result","type","err","console","error","response","upLoadImagesAPI","upLoadImages","likePostAPI","patch","likePost","unlikePostAPI","delete","unlikePost","loadUserPostsAPI","lastId","get","loadUserPosts","loadHashtagPostsAPI","encodeURIComponent","loadHashtagPosts","log","loadPostsAPI","loadPosts","loadPostAPI","loadPost","addPostAPI","addPost","id","removePostAPI","removePost","addCommentAPI","postId","addComment","watchLoadPosts","watchLoadUserPosts","watchLoadHashtagPosts","watchLoadPost","watchRetweet","watchupLoadImages","watchLikePost","watchUnLikePost","watchAddPost","watchRemovePost","watchAddComment","postSaga"],"mappings":"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","sourcesContent":["import { all, delay, fork, put, takeLatest, throttle, call } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport {\n  ADD_POST_SUCCESS,\n  ADD_POST_FAILURE,\n  ADD_POST_REQUEST,\n  REMOVE_POST_SUCCESS,\n  REMOVE_POST_FAILURE,\n  REMOVE_POST_REQUEST,\n  ADD_COMMENT_SUCCESS,\n  ADD_COMMENT_FAILURE,\n  ADD_COMMENT_REQUEST,\n  LOAD_POSTS_REQUEST,\n  LOAD_POSTS_SUCCESS,\n  LOAD_POSTS_FAILURE,\n  LOAD_POST_REQUEST,\n  LOAD_POST_SUCCESS,\n  LOAD_POST_FAILURE,\n  LIKE_POST_REQUEST,\n  LIKE_POST_SUCCESS,\n  LIKE_POST_FAILURE,\n  UNLIKE_POST_REQUEST,\n  UNLIKE_POST_SUCCESS,\n  UNLIKE_POST_FAILURE,\n  UPLOAD_IMAGES_REQUEST,\n  UPLOAD_IMAGES_SUCCESS,\n  UPLOAD_IMAGES_FAILURE,\n  RETWEET_REQUEST,\n  RETWEET_SUCCESS,\n  RETWEET_FAILURE,\n  LOAD_USER_POSTS_REQUEST,\n  LOAD_HASHTAG_POSTS_REQUEST,\n  LOAD_USER_POSTS_SUCCESS,\n  LOAD_USER_POSTS_FAILURE,\n  LOAD_HASHTAG_POSTS_SUCCESS,\n  LOAD_HASHTAG_POSTS_FAILURE,\n} from '../reducers/post';\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\n\nfunction retweetAPI(data) {\n  return axios.post(`/post/${data}/retweet`);\n}\n\nfunction* retweet(action) {\n  try {\n    const result = yield call(retweetAPI, action.data);\n    yield put({\n      type: RETWEET_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n\n    console.error(err);\n    yield put({\n      type: RETWEET_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction upLoadImagesAPI(data) {\n  return axios.post(`/post/images`, data);\n}\n\nfunction* upLoadImages(action) {\n  try {\n    const result = yield call(upLoadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n\n    yield put({\n      type: LIKE_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction unlikePostAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\n\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadUserPostsAPI(data, lastId) {\n  return axios.get(`/user/${data}/posts?lastId=${lastId || 0}`);\n}\n\nfunction* loadUserPosts(action) {\n  try {\n    const result = yield call(loadUserPostsAPI, action.data, action.lastId);\n    yield put({\n      type: LOAD_USER_POSTS_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n\n    yield put({\n      type: LOAD_USER_POSTS_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\nfunction loadHashtagPostsAPI(data, lastId) {\n  return axios.get(`/hashtag/${encodeURIComponent(data)}/posts?lastId=${lastId || 0}`);\n}\n\nfunction* loadHashtagPosts(action) {\n  try {\n    console.log('loadhash');\n    const result = yield call(loadHashtagPostsAPI, action.data, action.lastId);\n    yield put({\n      type: LOAD_HASHTAG_POSTS_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n\n    yield put({\n      type: LOAD_HASHTAG_POSTS_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadPostsAPI(lastId) {\n  return axios.get(`/posts?lastId=${lastId || 0}`);\n}\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI, action.lastId);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadPostAPI(data) {\n  return axios.get(`/post/${data}`);\n}\n\nfunction* loadPost(action) {\n  try {\n    const result = yield call(loadPostAPI, action.data);\n    yield put({\n      type: LOAD_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n\n    console.error(err);\n    yield put({\n      type: LOAD_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post('/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data,\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id,\n    });\n  } catch (err) {\n    console.error(err);\n\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data,\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data); // POST /post/1/comment\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n\n    console.log(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchLoadPosts() {\n  yield throttle(5000, LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchLoadUserPosts() {\n  yield throttle(5000, LOAD_USER_POSTS_REQUEST, loadUserPosts);\n}\n\nfunction* watchLoadHashtagPosts() {\n  yield throttle(5000, LOAD_HASHTAG_POSTS_REQUEST, loadHashtagPosts);\n}\n\nfunction* watchLoadPost() {\n  yield takeLatest(LOAD_POST_REQUEST, loadPost);\n}\n\nfunction* watchRetweet() {\n  yield takeLatest(RETWEET_REQUEST, retweet);\n}\n\nfunction* watchupLoadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, upLoadImages);\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchUnLikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([\n    fork(watchRetweet),\n    fork(watchupLoadImages),\n    fork(watchLikePost),\n    fork(watchUnLikePost),\n    fork(watchAddPost),\n    fork(watchAddComment),\n    fork(watchRemovePost),\n    fork(watchLoadUserPosts),\n    fork(watchLoadHashtagPosts),\n    fork(watchLoadPosts),\n    fork(watchLoadPost),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}