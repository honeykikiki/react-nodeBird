{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { HYDRATE } from 'next-redux-wrapper';\nconst initialState = {\n  user: {},\n  post: {}\n};\nimport user from './user';\nimport post from './post';\n\nconst changeNickname = data => {\n  return {\n    type: 'CHANGE_NICKNAME',\n    data\n  };\n};\n\nchangeNickname('kakaka');\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      console.log('HYDRATE', action);\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/heoseongjin/Desktop/node_bird/prepare/front/reducers/index.js"],"names":["HYDRATE","initialState","user","post","changeNickname","data","type","rootReducer","state","action","console","log","payload"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,IAAI,EAAE;AAFa,CAArB;AAKA,OAAOD,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,cAAc,GAAIC,IAAD,IAAU;AAC/B,SAAO;AACLC,IAAAA,IAAI,EAAE,iBADD;AAELD,IAAAA;AAFK,GAAP;AAID,CALD;;AAOAD,cAAc,CAAC,QAAD,CAAd;;AAEA,MAAMG,WAAW,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACH,IAAf;AACE,SAAKN,OAAL;AACEU,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,MAAvB;AACA,6CACKD,KADL,GAEKC,MAAM,CAACG,OAFZ;;AAKF;AACE,aAAOJ,KAAP;AATJ;AAWD,CAZD;;AAcA,eAAeD,WAAf","sourcesContent":["import { HYDRATE } from 'next-redux-wrapper';\n\nconst initialState = {\n  user: {},\n  post: {},\n};\n\nimport user from './user';\nimport post from './post';\n\nconst changeNickname = (data) => {\n  return {\n    type: 'CHANGE_NICKNAME',\n    data,\n  };\n};\n\nchangeNickname('kakaka');\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      console.log('HYDRATE', action);\n      return {\n        ...state,\n        ...action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}