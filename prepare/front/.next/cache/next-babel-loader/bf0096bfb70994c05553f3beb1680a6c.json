{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/heoseongjin/Desktop/node_bird/prepare/front/pages/post/[id].js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport AppLayout from '../../components/Applayout';\nimport PostCard from '../../components/PostCard';\nimport { useSelector } from 'react-redux';\n\nvar Post = function Post() {\n  _s();\n\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      singlePost = _useSelector.singlePost;\n\n  return __jsx(React.Fragment, null, __jsx(AppLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, __jsx(PostCard, {\n    psot: singlePost,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(Post, \"mnFtsSWNkMUCzNZlr05ZwL2ppco=\", false, function () {\n  return [useRouter, useSelector];\n});\n\n_c = Post;\nexport var __N_SSP = true;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/heoseongjin/Desktop/node_bird/prepare/front/pages/post/[id].js"],"names":["useRouter","AppLayout","PostCard","useSelector","Post","router","id","query","state","post","singlePost"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AAMA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAGA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACjB,MAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,MAAQM,EAAR,GAAeD,MAAM,CAACE,KAAtB,CAAQD,EAAR;;AACA,qBAAuBH,WAAW,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAAlC;AAAA,MAAQC,UAAR,gBAAQA,UAAR;;AAEA,SACE,4BACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAOD,CAZD;;GAAMN,I;UACWJ,S,EAEQG,W;;;KAHnBC,I;;AAgCN,eAAeA,IAAf","sourcesContent":["import { useRouter } from 'next/router';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\n\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\nimport AppLayout from '../../components/Applayout';\nimport PostCard from '../../components/PostCard';\nimport { useSelector } from 'react-redux';\nimport wrapper from '../../store/configureStore';\n\nconst Post = () => {\n  const router = useRouter();\n  const { id } = router.query;\n  const { singlePost } = useSelector((state) => state.post);\n\n  return (\n    <>\n      <AppLayout>\n        <PostCard psot={singlePost} />\n      </AppLayout>\n    </>\n  );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps((store) => async ({ req }) => {\n  // 로그인이 풀리는 현상, 서버에서 공유하지 않는 쿠키만들기\n  const cookie = req ? req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n  if (req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n  store.dispatch({\n    type: LOAD_MY_INFO_REQUEST,\n  });\n  store.dispatch({\n    type: LOAD_POST_REQUEST,\n    data: req.query.id,\n  });\n  store.dispatch(END);\n  await store.sagaTask.toPromise();\n});\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}