{"ast":null,"code":"import { all, delay, fork, put, takeLatest, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_MY_INFO_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWERS_FAILURE, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_SUCCESS, LOAD_FOLLOWINGS_FAILURE } from '../reducers/user';\n\nfunction changeNicknameAPI(data) {\n  return axios.patch('/user/nickname', {\n    nickname: data\n  });\n}\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data); // loginAPI의 매개변수는 ()안에 들어가지 않고 a,c,v, 배열형식으로 들어간다\n\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI(data) {\n  return axios.patch(`/user/${data}/follow`);\n}\n\nfunction* follow(action) {\n  try {\n    const result = yield call(followAPI, action.data); // loginAPI의 매개변수는 ()안에 들어가지 않고 a,c,v, 배열형식으로 들어간다\n\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unFollowAPI(data) {\n  return axios.delete(`user/${data}/follow`);\n}\n\nfunction* unFollow(action) {\n  try {\n    const result = yield call(unFollowAPI, action.data); // loginAPI의 매개변수는 ()안에 들어가지 않고 a,c,v, 배열형식으로 들어간다\n\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadMyInfoAPI(data) {\n  return axios.get('/user', data);\n}\n\nfunction* loadMyInfo(action) {\n  try {\n    const result = yield call(loadMyInfoAPI, action.data);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* login(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logoutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logout() {\n  try {\n    const result = yield call(logoutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signupAPI(data) {\n  return axios.post('/user', data);\n}\n\nfunction* signup(action) {\n  try {\n    const result = yield call(signupAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS // data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLoadFollowers() {\n  yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n}\n\nfunction* watchLoadFollowings() {\n  yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnFollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unFollow);\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, login);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logout);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signup);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLoadFollowers), fork(watchLoadFollowings), fork(watchChangeNickname), fork(watchLoadMyInfo), fork(watchFollow), fork(watchUnFollow), fork(watchLogin), fork(watchLogOut), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["/Users/heoseongjin/Desktop/node_bird/prepare/front/sagas/user.js"],"names":["all","delay","fork","put","takeLatest","call","axios","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","changeNicknameAPI","data","patch","nickname","changeNickname","action","result","type","err","error","response","followAPI","follow","unFollowAPI","delete","unFollow","loadMyInfoAPI","get","loadMyInfo","console","logInAPI","post","login","logoutAPI","logout","signupAPI","signup","log","watchLoadFollowers","loadFollowers","watchLoadFollowings","loadFollowings","watchChangeNickname","watchLoadMyInfo","watchFollow","watchUnFollow","watchLogin","watchLogOut","watchSignUp","userSaga"],"mappings":"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","sourcesContent":["import { all, delay, fork, put, takeLatest, call } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport {\n  LOG_IN_REQUEST,\n  LOG_IN_SUCCESS,\n  LOG_IN_FAILURE,\n  LOG_OUT_REQUEST,\n  LOG_OUT_SUCCESS,\n  LOG_OUT_FAILURE,\n  SIGN_UP_REQUEST,\n  SIGN_UP_SUCCESS,\n  SIGN_UP_FAILURE,\n  FOLLOW_REQUEST,\n  FOLLOW_SUCCESS,\n  FOLLOW_FAILURE,\n  UNFOLLOW_REQUEST,\n  UNFOLLOW_SUCCESS,\n  UNFOLLOW_FAILURE,\n  LOAD_MY_INFO_REQUEST,\n  LOAD_MY_INFO_SUCCESS,\n  LOAD_MY_INFO_FAILURE,\n  CHANGE_NICKNAME_REQUEST,\n  CHANGE_NICKNAME_SUCCESS,\n  CHANGE_NICKNAME_FAILURE,\n  LOAD_FOLLOWERS_REQUEST,\n  LOAD_FOLLOWERS_SUCCESS,\n  LOAD_FOLLOWERS_FAILURE,\n  LOAD_FOLLOWINGS_REQUEST,\n  LOAD_FOLLOWINGS_SUCCESS,\n  LOAD_FOLLOWINGS_FAILURE,\n} from '../reducers/user';\n\nfunction changeNicknameAPI(data) {\n  return axios.patch('/user/nickname', { nickname: data });\n}\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data); // loginAPI의 매개변수는 ()안에 들어가지 않고 a,c,v, 배열형식으로 들어간다\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction followAPI(data) {\n  return axios.patch(`/user/${data}/follow`);\n}\n\nfunction* follow(action) {\n  try {\n    const result = yield call(followAPI, action.data); // loginAPI의 매개변수는 ()안에 들어가지 않고 a,c,v, 배열형식으로 들어간다\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction unFollowAPI(data) {\n  return axios.delete(`user/${data}/follow`);\n}\n\nfunction* unFollow(action) {\n  try {\n    const result = yield call(unFollowAPI, action.data); // loginAPI의 매개변수는 ()안에 들어가지 않고 a,c,v, 배열형식으로 들어간다\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadMyInfoAPI(data) {\n  return axios.get('/user', data);\n}\n\nfunction* loadMyInfo(action) {\n  try {\n    const result = yield call(loadMyInfoAPI, action.data);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* login(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction logoutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logout() {\n  try {\n    const result = yield call(logoutAPI);\n\n    yield put({\n      type: LOG_OUT_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction signupAPI(data) {\n  return axios.post('/user', data);\n}\n\nfunction* signup(action) {\n  try {\n    const result = yield call(signupAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n      // data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchLoadFollowers() {\n  yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n}\n\nfunction* watchLoadFollowings() {\n  yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnFollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unFollow);\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, login);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logout);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signup);\n}\n\nexport default function* userSaga() {\n  yield all([\n    fork(watchLoadFollowers),\n    fork(watchLoadFollowings),\n    fork(watchChangeNickname),\n    fork(watchLoadMyInfo),\n    fork(watchFollow),\n    fork(watchUnFollow),\n    fork(watchLogin),\n    fork(watchLogOut),\n    fork(watchSignUp),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}