{"ast":null,"code":"var _jsxFileName = \"/Users/heoseongjin/Desktop/node_bird/prepare/front/components/CommnetForm.js\";\nvar __jsx = React.createElement;\nimport { Form, Input, Button } from 'antd';\nimport React, { useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useInput from '../hooks/useInput';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\nconst CommentForm = ({\n  post\n}) => {\n  const dispatch = useDispatch;\n  const {\n    addCommentDone,\n    addCommentLoading\n  } = useSelector(state => state.post);\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n  const onSubmitComment = useCallback(() => {\n    console.log(post.id, commentText, id);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        userId: id,\n        postId: post.id\n      }\n    });\n  }, [commentText, id]);\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: 'relative',\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(Input.TextArea, {\n    rows: 4,\n    value: commentText,\n    onChange: onChangeCommentText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }), __jsx(Button, {\n    style: {\n      position: 'absolute',\n      right: 0,\n      bottom: -40,\n      zIndex: 100\n    },\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: addCommentLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"\\uC090\\uC57D\"))));\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["/Users/heoseongjin/Desktop/node_bird/prepare/front/components/CommnetForm.js"],"names":["Form","Input","Button","React","useCallback","useEffect","PropTypes","useDispatch","useSelector","useInput","ADD_COMMENT_REQUEST","CommentForm","post","dispatch","addCommentDone","addCommentLoading","state","id","user","me","commentText","onChangeCommentText","setCommentText","onSubmitComment","console","log","type","data","content","userId","postId","position","margin","right","bottom","zIndex","propTypes","object","isRequired"],"mappings":";;AAAA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,mBAAT,QAAoC,kBAApC;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAChC,QAAMC,QAAQ,GAAGN,WAAjB;AACA,QAAM;AAAEO,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAAwCP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACJ,IAAlB,CAAzD;AACA,QAAMK,EAAE,GAAGT,WAAW,CAAEQ,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACE,IAAN,CAAWC,EAAtB,mDAAW,eAAeF,EAA1B;AAAA,GAAD,CAAtB;AACA,QAAM,CAACG,WAAD,EAAcC,mBAAd,EAAmCC,cAAnC,IAAqDb,QAAQ,CAAC,EAAD,CAAnE;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,cAAJ,EAAoB;AAClBQ,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD;AACF,GAJQ,EAIN,CAACR,cAAD,CAJM,CAAT;AAMA,QAAMS,eAAe,GAAGnB,WAAW,CAAC,MAAM;AACxCoB,IAAAA,OAAO,CAACC,GAAR,CAAYb,IAAI,CAACK,EAAjB,EAAqBG,WAArB,EAAkCH,EAAlC;AACAJ,IAAAA,QAAQ,CAAC;AACPa,MAAAA,IAAI,EAAEhB,mBADC;AAEPiB,MAAAA,IAAI,EAAE;AAAEC,QAAAA,OAAO,EAAER,WAAX;AAAwBS,QAAAA,MAAM,EAAEZ,EAAhC;AAAoCa,QAAAA,MAAM,EAAElB,IAAI,CAACK;AAAjD;AAFC,KAAD,CAAR;AAID,GANkC,EAMhC,CAACG,WAAD,EAAcH,EAAd,CANgC,CAAnC;AAQA,SACE,4BACE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEM,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAE;AAAEQ,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,MAAM,EAAE;AAAhC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,IAAI,EAAE,CAAtB;AAAyB,IAAA,KAAK,EAAEZ,WAAhC;AAA6C,IAAA,QAAQ,EAAEC,mBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,MAAD;AACE,IAAA,KAAK,EAAE;AAAEU,MAAAA,QAAQ,EAAE,UAAZ;AAAwBE,MAAAA,KAAK,EAAE,CAA/B;AAAkCC,MAAAA,MAAM,EAAE,CAAC,EAA3C;AAA+CC,MAAAA,MAAM,EAAE;AAAvD,KADT;AAEE,IAAA,IAAI,EAAC,SAFP;AAGE,IAAA,QAAQ,EAAC,QAHX;AAIE,IAAA,OAAO,EAAEpB,iBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CADF,CADF,CADF;AAiBD,CArCD;;AAuCAJ,WAAW,CAACyB,SAAZ,GAAwB;AACtBxB,EAAAA,IAAI,EAAEN,SAAS,CAAC+B,MAAV,CAAiBC;AADD,CAAxB;AAIA,eAAe3B,WAAf","sourcesContent":["import { Form, Input, Button } from 'antd';\nimport React, { useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport useInput from '../hooks/useInput';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\nconst CommentForm = ({ post }) => {\n  const dispatch = useDispatch;\n  const { addCommentDone, addCommentLoading } = useSelector((state) => state.post);\n  const id = useSelector((state) => state.user.me?.id);\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\n\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n\n  const onSubmitComment = useCallback(() => {\n    console.log(post.id, commentText, id);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: { content: commentText, userId: id, postId: post.id },\n    });\n  }, [commentText, id]);\n\n  return (\n    <>\n      <Form onFinish={onSubmitComment}>\n        <Form.Item style={{ position: 'relative', margin: 0 }}>\n          <Input.TextArea rows={4} value={commentText} onChange={onChangeCommentText} />\n          <Button\n            style={{ position: 'absolute', right: 0, bottom: -40, zIndex: 100 }}\n            type=\"primary\"\n            htmlType=\"submit\"\n            loading={addCommentLoading}\n          >\n            삐약\n          </Button>\n        </Form.Item>\n      </Form>\n    </>\n  );\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired,\n};\n\nexport default CommentForm;\n"]},"metadata":{},"sourceType":"module"}