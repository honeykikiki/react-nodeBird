{"ast":null,"code":"import { all, fork, put, takeLatest, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_MY_INFO_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWERS_FAILURE, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_SUCCESS, LOAD_FOLLOWINGS_FAILURE, REMOVE_FOLLOWER_REQUEST, REMOVE_FOLLOWER_SUCCESS, REMOVE_FOLLOWER_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE } from '../reducers/user';\n\nfunction removeFollowerAPI(data) {\n  return axios.delete(`/user/follower/${data}`);\n}\n\nfunction* removeFollower(action) {\n  try {\n    const result = yield call(removeFollowerAPI, action.data); // loginAPI의 매개변수는 ()안에 들어가지 않고 a,c,v, 배열형식으로 들어간다\n\n    yield put({\n      type: REMOVE_FOLLOWER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_FOLLOWER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadFollowersAPI(data) {\n  return axios.get(`/user/followers`, data);\n}\n\nfunction* loadFollowers(action) {\n  try {\n    const result = yield call(loadFollowersAPI, action.data); // loginAPI의 매개변수는 ()안에 들어가지 않고 a,c,v, 배열형식으로 들어간다\n\n    yield put({\n      type: LOAD_FOLLOWERS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_FOLLOWERS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadFollowingsAPI(data) {\n  return axios.get(`/user/followings`, data);\n}\n\nfunction* loadFollowings(action) {\n  try {\n    const result = yield call(loadFollowingsAPI, action.data); // loginAPI의 매개변수는 ()안에 들어가지 않고 a,c,v, 배열형식으로 들어간다\n\n    yield put({\n      type: LOAD_FOLLOWINGS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_FOLLOWINGS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction changeNicknameAPI(data) {\n  return axios.patch('/user/nickname', {\n    nickname: data\n  });\n}\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data); // loginAPI의 매개변수는 ()안에 들어가지 않고 a,c,v, 배열형식으로 들어간다\n\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI(data) {\n  return axios.patch(`/user/${data}/follow`);\n}\n\nfunction* follow(action) {\n  try {\n    const result = yield call(followAPI, action.data); // loginAPI의 매개변수는 ()안에 들어가지 않고 a,c,v, 배열형식으로 들어간다\n\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unFollowAPI(data) {\n  return axios.delete(`user/${data}/follow`);\n}\n\nfunction* unFollow(action) {\n  try {\n    const result = yield call(unFollowAPI, action.data); // loginAPI의 매개변수는 ()안에 들어가지 않고 a,c,v, 배열형식으로 들어간다\n\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadMyInfoAPI(data) {\n  return axios.get('/user', data);\n}\n\nfunction* loadMyInfo(action) {\n  try {\n    const result = yield call(loadMyInfoAPI, action.data);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* login(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logoutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logout() {\n  try {\n    const result = yield call(logoutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signupAPI(data) {\n  return axios.post('/user', data);\n}\n\nfunction* signup(action) {\n  try {\n    const result = yield call(signupAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS // data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchRemoveFollower() {\n  yield takeLatest(REMOVE_FOLLOWER_REQUEST, removeFollower);\n}\n\nfunction* watchLoadFollowers() {\n  yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n}\n\nfunction* watchLoadFollowings() {\n  yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnFollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unFollow);\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, login);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logout);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signup);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchRemoveFollower), fork(watchLoadFollowers), fork(watchLoadFollowings), fork(watchChangeNickname), fork(watchLoadMyInfo), fork(watchLoadUser), fork(watchFollow), fork(watchUnFollow), fork(watchLogin), fork(watchLogOut), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["/Users/heoseongjin/Desktop/node_bird/prepare/front/sagas/user.js"],"names":["all","fork","put","takeLatest","call","axios","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","removeFollowerAPI","data","delete","removeFollower","action","result","type","err","error","response","loadFollowersAPI","get","loadFollowers","loadFollowingsAPI","loadFollowings","changeNicknameAPI","patch","nickname","changeNickname","followAPI","follow","unFollowAPI","unFollow","loadMyInfoAPI","loadMyInfo","console","logInAPI","post","login","logoutAPI","logout","signupAPI","signup","log","watchRemoveFollower","watchLoadFollowers","watchLoadFollowings","watchChangeNickname","watchLoadMyInfo","watchLoadUser","loadUser","watchFollow","watchUnFollow","watchLogin","watchLogOut","watchSignUp","userSaga"],"mappings":"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","sourcesContent":["import { all, fork, put, takeLatest, call } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport {\n  LOG_IN_REQUEST,\n  LOG_IN_SUCCESS,\n  LOG_IN_FAILURE,\n  LOG_OUT_REQUEST,\n  LOG_OUT_SUCCESS,\n  LOG_OUT_FAILURE,\n  SIGN_UP_REQUEST,\n  SIGN_UP_SUCCESS,\n  SIGN_UP_FAILURE,\n  FOLLOW_REQUEST,\n  FOLLOW_SUCCESS,\n  FOLLOW_FAILURE,\n  UNFOLLOW_REQUEST,\n  UNFOLLOW_SUCCESS,\n  UNFOLLOW_FAILURE,\n  LOAD_MY_INFO_REQUEST,\n  LOAD_MY_INFO_SUCCESS,\n  LOAD_MY_INFO_FAILURE,\n  CHANGE_NICKNAME_REQUEST,\n  CHANGE_NICKNAME_SUCCESS,\n  CHANGE_NICKNAME_FAILURE,\n  LOAD_FOLLOWERS_REQUEST,\n  LOAD_FOLLOWERS_SUCCESS,\n  LOAD_FOLLOWERS_FAILURE,\n  LOAD_FOLLOWINGS_REQUEST,\n  LOAD_FOLLOWINGS_SUCCESS,\n  LOAD_FOLLOWINGS_FAILURE,\n  REMOVE_FOLLOWER_REQUEST,\n  REMOVE_FOLLOWER_SUCCESS,\n  REMOVE_FOLLOWER_FAILURE,\n  LOAD_USER_REQUEST,\n  LOAD_USER_SUCCESS,\n  LOAD_USER_FAILURE,\n} from '../reducers/user';\n\nfunction removeFollowerAPI(data) {\n  return axios.delete(`/user/follower/${data}`);\n}\n\nfunction* removeFollower(action) {\n  try {\n    const result = yield call(removeFollowerAPI, action.data); // loginAPI의 매개변수는 ()안에 들어가지 않고 a,c,v, 배열형식으로 들어간다\n    yield put({\n      type: REMOVE_FOLLOWER_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_FOLLOWER_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadFollowersAPI(data) {\n  return axios.get(`/user/followers`, data);\n}\n\nfunction* loadFollowers(action) {\n  try {\n    const result = yield call(loadFollowersAPI, action.data); // loginAPI의 매개변수는 ()안에 들어가지 않고 a,c,v, 배열형식으로 들어간다\n    yield put({\n      type: LOAD_FOLLOWERS_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_FOLLOWERS_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadFollowingsAPI(data) {\n  return axios.get(`/user/followings`, data);\n}\n\nfunction* loadFollowings(action) {\n  try {\n    const result = yield call(loadFollowingsAPI, action.data); // loginAPI의 매개변수는 ()안에 들어가지 않고 a,c,v, 배열형식으로 들어간다\n    yield put({\n      type: LOAD_FOLLOWINGS_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_FOLLOWINGS_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction changeNicknameAPI(data) {\n  return axios.patch('/user/nickname', { nickname: data });\n}\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data); // loginAPI의 매개변수는 ()안에 들어가지 않고 a,c,v, 배열형식으로 들어간다\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction followAPI(data) {\n  return axios.patch(`/user/${data}/follow`);\n}\n\nfunction* follow(action) {\n  try {\n    const result = yield call(followAPI, action.data); // loginAPI의 매개변수는 ()안에 들어가지 않고 a,c,v, 배열형식으로 들어간다\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction unFollowAPI(data) {\n  return axios.delete(`user/${data}/follow`);\n}\n\nfunction* unFollow(action) {\n  try {\n    const result = yield call(unFollowAPI, action.data); // loginAPI의 매개변수는 ()안에 들어가지 않고 a,c,v, 배열형식으로 들어간다\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadMyInfoAPI(data) {\n  return axios.get('/user', data);\n}\n\nfunction* loadMyInfo(action) {\n  try {\n    const result = yield call(loadMyInfoAPI, action.data);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* login(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction logoutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logout() {\n  try {\n    const result = yield call(logoutAPI);\n\n    yield put({\n      type: LOG_OUT_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction signupAPI(data) {\n  return axios.post('/user', data);\n}\n\nfunction* signup(action) {\n  try {\n    const result = yield call(signupAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n      // data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchRemoveFollower() {\n  yield takeLatest(REMOVE_FOLLOWER_REQUEST, removeFollower);\n}\n\nfunction* watchLoadFollowers() {\n  yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n}\n\nfunction* watchLoadFollowings() {\n  yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnFollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unFollow);\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, login);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logout);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signup);\n}\n\nexport default function* userSaga() {\n  yield all([\n    fork(watchRemoveFollower),\n    fork(watchLoadFollowers),\n    fork(watchLoadFollowings),\n    fork(watchChangeNickname),\n    fork(watchLoadMyInfo),\n    fork(watchLoadUser),\n    fork(watchFollow),\n    fork(watchUnFollow),\n    fork(watchLogin),\n    fork(watchLogOut),\n    fork(watchSignUp),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}