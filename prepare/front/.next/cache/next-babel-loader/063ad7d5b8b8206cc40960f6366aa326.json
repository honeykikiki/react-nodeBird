{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useState, useEffect } from 'react';\nimport Head from 'next/head';\nimport { Checkbox, Form, Input, Button } from 'antd';\nimport Router from 'next/router';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AppLayout from '../components/Applayout';\nimport useinput from '../hooks/useInput';\nimport { SIGN_UP_REQUEST, LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport wrapper from '../store/configureStore'; // import Password from 'antd/lib/input/Password';\n\nconst ErrorMessage = styled.div.withConfig({\n  displayName: \"signup__ErrorMessage\",\n  componentId: \"sc-1oeks01-0\"\n})([\"color:red;\"]);\n\nconst Signup = () => {\n  const dispatch = useDispatch();\n  const {\n    signUpLoading,\n    signUpDone,\n    signUpError,\n    me\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    if (me && me.id) {\n      Router.replace('/');\n    }\n  }, [me && me.id]);\n  useEffect(() => {\n    if (signUpDone) {\n      Router.replace('/');\n    }\n  }, [signUpDone]);\n  useEffect(() => {\n    if (signUpError) {\n      alert(signUpError);\n    }\n  }, [signUpError]);\n  const [email, onchangeEmail] = useinput('');\n  const [nickname, onchangeNickname] = useinput('');\n  const [password, onchangePassword] = useinput('');\n  const {\n    0: passwordCheck,\n    1: setPasswordCheck\n  } = useState('');\n  const {\n    0: passwordError,\n    1: setPasswordError\n  } = useState(false);\n  const onChangePasswordCheck = useCallback(e => {\n    setPasswordCheck(e.target.value);\n    setPasswordError(e.target.value !== password);\n  }, [password]);\n  const {\n    0: term,\n    1: setTerm\n  } = useState('');\n  const {\n    0: termError,\n    1: setTermError\n  } = useState(false);\n  const onChangeTerm = useCallback(e => {\n    setTerm(e.target.checked);\n    setTermError(false);\n  }, []); // eslint-disable-next-line consistent-return\n\n  const onSubmit = useCallback(() => {\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n\n    console.log(email, password, nickname);\n    dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        email,\n        password,\n        nickname\n      }\n    });\n  }, [password, passwordCheck, term]);\n  return __jsx(React.Fragment, null, __jsx(AppLayout, null, __jsx(Head, null, __jsx(\"meta\", {\n    charSet: \"utf-8\"\n  }), __jsx(\"title\", null, \"\\uD68C\\uC6D0\\uAC00\\uC785 | NodeBird \")), __jsx(Form, {\n    onFinish: onSubmit\n  }, __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-email\"\n  }, \"\\uC774\\uBA54\\uC77C\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-email\",\n    type: \"email\",\n    value: email,\n    onChange: onchangeEmail,\n    required: true\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-nickname\"\n  }, \"\\uB2C9\\uB124\\uC784\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-nick\",\n    value: nickname,\n    onChange: onchangeNickname,\n    required: true\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-password\"\n  }, \"\\uD328\\uC2A4\\uC6CC\\uB4DC\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-password\",\n    type: \"password\",\n    value: password,\n    onChange: onchangePassword,\n    required: true\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-password-check\"\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uCCB4\\uD06C\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-password-check\",\n    type: \"password\",\n    value: passwordCheck,\n    required: true,\n    onChange: onChangePasswordCheck\n  }), passwordError && __jsx(ErrorMessage, null, \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4\")), __jsx(\"div\", null, __jsx(Checkbox, {\n    name: \"uset-term\",\n    checked: term,\n    onChange: onChangeTerm\n  }, \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758 \\uD558\\uC2ED\\uB2C8\\uAE4C?\"), termError && __jsx(ErrorMessage, null, \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758 \\uD558\\uC154\\uC57C\\uD569\\uB2C8\\uB2E4\")), __jsx(\"div\", {\n    style: {\n      marginTop: 10\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: signUpLoading\n  }, \"\\uAC00\\uC785\\uD558\\uAE30\")))));\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(store => async ({\n  req\n}) => {\n  // 로그인이 풀리는 현상, 서버에서 공유하지 않는 쿠키만들기\n  const cookie = req ? req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  store.dispatch(END);\n  await store.sagaTask.toPromise();\n});\nexport default Signup;","map":{"version":3,"sources":["/Users/heoseongjin/Desktop/node_bird/prepare/front/pages/signup.js"],"names":["React","useCallback","useState","useEffect","Head","Checkbox","Form","Input","Button","Router","axios","END","styled","useDispatch","useSelector","AppLayout","useinput","SIGN_UP_REQUEST","LOAD_MY_INFO_REQUEST","wrapper","ErrorMessage","div","Signup","dispatch","signUpLoading","signUpDone","signUpError","me","state","user","id","replace","alert","email","onchangeEmail","nickname","onchangeNickname","password","onchangePassword","passwordCheck","setPasswordCheck","passwordError","setPasswordError","onChangePasswordCheck","e","target","value","term","setTerm","termError","setTermError","onChangeTerm","checked","onSubmit","console","log","type","data","marginTop","getServerSideProps","store","req","cookie","headers","defaults","Cookie","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\nimport Head from 'next/head';\nimport { Checkbox, Form, Input, Button } from 'antd';\nimport Router from 'next/router';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\n\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AppLayout from '../components/Applayout';\nimport useinput from '../hooks/useInput';\nimport { SIGN_UP_REQUEST, LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport wrapper from '../store/configureStore';\n// import Password from 'antd/lib/input/Password';\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nconst Signup = () => {\n  const dispatch = useDispatch();\n  const { signUpLoading, signUpDone, signUpError, me } = useSelector((state) => state.user);\n\n  useEffect(() => {\n    if (me && me.id) {\n      Router.replace('/');\n    }\n  }, [me && me.id]);\n\n  useEffect(() => {\n    if (signUpDone) {\n      Router.replace('/');\n    }\n  }, [signUpDone]);\n\n  useEffect(() => {\n    if (signUpError) {\n      alert(signUpError);\n    }\n  }, [signUpError]);\n\n  const [email, onchangeEmail] = useinput('');\n  const [nickname, onchangeNickname] = useinput('');\n  const [password, onchangePassword] = useinput('');\n\n  const [passwordCheck, setPasswordCheck] = useState('');\n  const [passwordError, setPasswordError] = useState(false);\n  const onChangePasswordCheck = useCallback(\n    (e) => {\n      setPasswordCheck(e.target.value);\n      setPasswordError(e.target.value !== password);\n    },\n    [password],\n  );\n\n  const [term, setTerm] = useState('');\n  const [termError, setTermError] = useState(false);\n  const onChangeTerm = useCallback((e) => {\n    setTerm(e.target.checked);\n    setTermError(false);\n  }, []);\n\n  // eslint-disable-next-line consistent-return\n  const onSubmit = useCallback(() => {\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n    if (!term) {\n      return setTermError(true);\n    }\n    console.log(email, password, nickname);\n    dispatch({\n      type: SIGN_UP_REQUEST,\n      data: { email, password, nickname },\n    });\n  }, [password, passwordCheck, term]);\n\n  return (\n    <>\n      <AppLayout>\n        <Head>\n          <meta charSet=\"utf-8\" />\n          <title>회원가입 | NodeBird </title>\n        </Head>\n        <Form onFinish={onSubmit}>\n          <div>\n            <label htmlFor=\"user-email\">이메일</label>\n            <br />\n            <Input name=\"user-email\" type=\"email\" value={email} onChange={onchangeEmail} required />\n          </div>\n\n          <div>\n            <label htmlFor=\"user-nickname\">닉네임</label>\n            <br />\n            <Input name=\"user-nick\" value={nickname} onChange={onchangeNickname} required />\n          </div>\n\n          <div>\n            <label htmlFor=\"user-password\">패스워드</label>\n            <br />\n            <Input\n              name=\"user-password\"\n              type=\"password\"\n              value={password}\n              onChange={onchangePassword}\n              required\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"user-password-check\">비밀번호체크</label>\n            <br />\n            <Input\n              name=\"user-password-check\"\n              type=\"password\"\n              value={passwordCheck}\n              required\n              onChange={onChangePasswordCheck}\n            />\n            {passwordError && <ErrorMessage>비밀번호가 일치하지 않습니다</ErrorMessage>}\n          </div>\n\n          <div>\n            <Checkbox name=\"uset-term\" checked={term} onChange={onChangeTerm}>\n              약관에 동의 하십니까?\n            </Checkbox>\n            {termError && <ErrorMessage>약관에 동의 하셔야합니다</ErrorMessage>}\n          </div>\n\n          <div style={{ marginTop: 10 }}>\n            <Button type=\"primary\" htmlType=\"submit\" loading={signUpLoading}>\n              가입하기\n            </Button>\n          </div>\n        </Form>\n      </AppLayout>\n    </>\n  );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps((store) => async ({ req }) => {\n  // 로그인이 풀리는 현상, 서버에서 공유하지 않는 쿠키만들기\n  const cookie = req ? req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n  if (req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n  store.dispatch({\n    type: LOAD_MY_INFO_REQUEST,\n  });\n  store.dispatch(END);\n  await store.sagaTask.toPromise();\n});\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}