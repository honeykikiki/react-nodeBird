{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  isLoggingIn: false,\n  // 로그인 시도중\n  isLoggedIn: false,\n  isloggingOut: false,\n  // 로그아웃 시도중\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nexport const loginAction = data => {\n  return (dispatch, getState) => {\n    const state = getState();\n    dispatch(loginRequsetAction());\n    axios.post('/api/login').then(res => {\n      dispatch(loginSuccessAction(res.data));\n    }).catch(err => {\n      dispatch(loginFailureAction(err));\n    });\n  };\n};\nexport const loginRequsetAction = data => {\n  return {\n    type: 'LOG_IN_REQUEST',\n    data\n  };\n};\nexport const logoutRequsetAction = data => {\n  return {\n    type: 'LOG_OUT_REQUEST',\n    data\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOG_IN_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: true\n      });\n\n    case 'LOG_IN_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: false,\n        isLoggedIn: true,\n        me: _objectSpread(_objectSpread({}, action.data), {}, {\n          nickname: 'zeroCho'\n        })\n      });\n\n    case 'LOG_IN_FAILURE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: false,\n        isLoggedIn: false,\n        me: action.data\n      });\n\n    case 'LOG_OUT_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: true,\n        me: null\n      });\n\n    case 'LOG_OUT_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false,\n        isLoggedIn: false,\n        me: null\n      });\n\n    case 'LOG_OUT_FAILURE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false,\n        me: null\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/heoseongjin/Desktop/node_bird/prepare/front/reducers/user.js"],"names":["initialState","isLoggingIn","isLoggedIn","isloggingOut","me","signUpData","loginData","loginAction","data","dispatch","getState","state","loginRequsetAction","axios","post","then","res","loginSuccessAction","catch","err","loginFailureAction","type","logoutRequsetAction","reducer","action","nickname","isLoggingOut"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,WAAW,EAAE,KADa;AACN;AACpBC,EAAAA,UAAU,EAAE,KAFc;AAG1BC,EAAAA,YAAY,EAAE,KAHY;AAGL;AACrBC,EAAAA,EAAE,EAAE,IAJsB;AAK1BC,EAAAA,UAAU,EAAE,EALc;AAM1BC,EAAAA,SAAS,EAAE;AANe,CAArB;AASP,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU;AACnC,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC7B,UAAMC,KAAK,GAAGD,QAAQ,EAAtB;AACAD,IAAAA,QAAQ,CAACG,kBAAkB,EAAnB,CAAR;AACAC,IAAAA,KAAK,CACFC,IADH,CACQ,YADR,EAEGC,IAFH,CAESC,GAAD,IAAS;AACbP,MAAAA,QAAQ,CAACQ,kBAAkB,CAACD,GAAG,CAACR,IAAL,CAAnB,CAAR;AACD,KAJH,EAKGU,KALH,CAKUC,GAAD,IAAS;AACdV,MAAAA,QAAQ,CAACW,kBAAkB,CAACD,GAAD,CAAnB,CAAR;AACD,KAPH;AAQD,GAXD;AAYD,CAbM;AAeP,OAAO,MAAMP,kBAAkB,GAAIJ,IAAD,IAAU;AAC1C,SAAO;AACLa,IAAAA,IAAI,EAAE,gBADD;AAELb,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAMc,mBAAmB,GAAId,IAAD,IAAU;AAC3C,SAAO;AACLa,IAAAA,IAAI,EAAE,iBADD;AAELb,IAAAA;AAFK,GAAP;AAID,CALM;;AAOP,MAAMe,OAAO,GAAG,CAACZ,KAAK,GAAGX,YAAT,EAAuBwB,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACH,IAAf;AACE,SAAK,gBAAL;AACE,6CACKV,KADL;AAEEV,QAAAA,WAAW,EAAE;AAFf;;AAIF,SAAK,gBAAL;AACE,6CACKU,KADL;AAEEV,QAAAA,WAAW,EAAE,KAFf;AAGEC,QAAAA,UAAU,EAAE,IAHd;AAIEE,QAAAA,EAAE,kCAAOoB,MAAM,CAAChB,IAAd;AAAoBiB,UAAAA,QAAQ,EAAE;AAA9B;AAJJ;;AAMF,SAAK,gBAAL;AACE,6CACKd,KADL;AAEEV,QAAAA,WAAW,EAAE,KAFf;AAGEC,QAAAA,UAAU,EAAE,KAHd;AAIEE,QAAAA,EAAE,EAAEoB,MAAM,CAAChB;AAJb;;AAMF,SAAK,iBAAL;AACE,6CACKG,KADL;AAEEe,QAAAA,YAAY,EAAE,IAFhB;AAGEtB,QAAAA,EAAE,EAAE;AAHN;;AAKF,SAAK,iBAAL;AACE,6CACKO,KADL;AAEEe,QAAAA,YAAY,EAAE,KAFhB;AAGExB,QAAAA,UAAU,EAAE,KAHd;AAIEE,QAAAA,EAAE,EAAE;AAJN;;AAMF,SAAK,iBAAL;AACE,6CACKO,KADL;AAEEe,QAAAA,YAAY,EAAE,KAFhB;AAGEtB,QAAAA,EAAE,EAAE;AAHN;;AAMF;AACE,aAAOO,KAAP;AAzCJ;AA2CD,CA5CD;;AA8CA,eAAeY,OAAf","sourcesContent":["export const initialState = {\n  isLoggingIn: false, // 로그인 시도중\n  isLoggedIn: false,\n  isloggingOut: false, // 로그아웃 시도중\n  me: null,\n  signUpData: {},\n  loginData: {},\n};\n\nexport const loginAction = (data) => {\n  return (dispatch, getState) => {\n    const state = getState();\n    dispatch(loginRequsetAction());\n    axios\n      .post('/api/login')\n      .then((res) => {\n        dispatch(loginSuccessAction(res.data));\n      })\n      .catch((err) => {\n        dispatch(loginFailureAction(err));\n      });\n  };\n};\n\nexport const loginRequsetAction = (data) => {\n  return {\n    type: 'LOG_IN_REQUEST',\n    data,\n  };\n};\n\nexport const logoutRequsetAction = (data) => {\n  return {\n    type: 'LOG_OUT_REQUEST',\n    data,\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOG_IN_REQUEST':\n      return {\n        ...state,\n        isLoggingIn: true,\n      };\n    case 'LOG_IN_SUCCESS':\n      return {\n        ...state,\n        isLoggingIn: false,\n        isLoggedIn: true,\n        me: { ...action.data, nickname: 'zeroCho' },\n      };\n    case 'LOG_IN_FAILURE':\n      return {\n        ...state,\n        isLoggingIn: false,\n        isLoggedIn: false,\n        me: action.data,\n      };\n    case 'LOG_OUT_REQUEST':\n      return {\n        ...state,\n        isLoggingOut: true,\n        me: null,\n      };\n    case 'LOG_OUT_SUCCESS':\n      return {\n        ...state,\n        isLoggingOut: false,\n        isLoggedIn: false,\n        me: null,\n      };\n    case 'LOG_OUT_FAILURE':\n      return {\n        ...state,\n        isLoggingOut: false,\n        me: null,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}