{"ast":null,"code":"var _jsxFileName = \"/Users/heoseongjin/Desktop/node_bird/prepare/front/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AppLayout from '../components/Applayout';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostsLoading,\n    retweetError\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    if (retweetError) {\n      alert(retweetError);\n    }\n  }, [retweetError]);\n  useEffect(() => {\n    dispatch({\n      type: LOAD_MY_INFO_REQUEST\n    });\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(() => {\n    function onScroll() {\n      // console.log(\n      //   window.scrollY,\n      //   document.documentElement.clientHeight,\n      //   document.documentElement.scrollHeight,\n      //   -300,\n      // );\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          const lastId = mainPosts[mainPosts.length - 1].id;\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            lastId\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePosts, loadPostsLoading]);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, me && __jsx(PostForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 14\n    }\n  }), mainPosts.map(post => {\n    return __jsx(PostCard, {\n      key: post.id,\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 16\n      }\n    });\n  }));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/heoseongjin/Desktop/node_bird/prepare/front/pages/index.js"],"names":["React","useEffect","useDispatch","useSelector","AppLayout","PostForm","PostCard","LOAD_POSTS_REQUEST","LOAD_MY_INFO_REQUEST","Home","dispatch","me","state","user","mainPosts","hasMorePosts","loadPostsLoading","retweetError","post","alert","type","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","length","id","addEventListener","removeEventListener","map"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,oBAAT,QAAqC,kBAArC;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AAEA,QAAM;AAAES,IAAAA;AAAF,MAASR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1B;AACA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,YAAb;AAA2BC,IAAAA,gBAA3B;AAA6CC,IAAAA;AAA7C,MAA8Dd,WAAW,CAC5ES,KAAD,IAAWA,KAAK,CAACM,IAD4D,CAA/E;AAIAjB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,YAAJ,EAAkB;AAChBE,MAAAA,KAAK,CAACF,YAAD,CAAL;AACD;AACF,GAJQ,EAIN,CAACA,YAAD,CAJM,CAAT;AAMAhB,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,QAAQ,CAAC;AACPU,MAAAA,IAAI,EAAEZ;AADC,KAAD,CAAR;AAGAE,IAAAA,QAAQ,CAAC;AACPU,MAAAA,IAAI,EAAEb;AADC,KAAD,CAAR;AAGD,GAPQ,EAON,EAPM,CAAT;AASAN,EAAAA,SAAS,CAAC,MAAM;AACd,aAASoB,QAAT,GAAoB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,UACEC,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GACAF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAF1C,EAGE;AACA,YAAIZ,YAAY,IAAI,CAACC,gBAArB,EAAuC;AACrC,gBAAMY,MAAM,GAAGd,SAAS,CAACA,SAAS,CAACe,MAAV,GAAmB,CAApB,CAAT,CAAgCC,EAA/C;AACApB,UAAAA,QAAQ,CAAC;AACPU,YAAAA,IAAI,EAAEb,kBADC;AAEPqB,YAAAA;AAFO,WAAD,CAAR;AAID;AACF;AACF;;AAEDN,IAAAA,MAAM,CAACS,gBAAP,CAAwB,QAAxB,EAAkCV,QAAlC;AACA,WAAO,MAAM;AACXC,MAAAA,MAAM,CAACU,mBAAP,CAA2B,QAA3B,EAAqCX,QAArC;AACD,KAFD;AAGD,GA1BQ,EA0BN,CAACN,YAAD,EAAeC,gBAAf,CA1BM,CAAT;AA4BA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,EAAE,IAAI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADT,EAEGG,SAAS,CAACmB,GAAV,CAAef,IAAD,IAAU;AACvB,WAAO,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACY,EAApB;AAAwB,MAAA,IAAI,EAAEZ,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFA,CAFH,CADF;AAQD,CA3DD;;AA6DA,eAAeT,IAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport AppLayout from '../components/Applayout';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\n\nconst Home = () => {\n  const dispatch = useDispatch();\n\n  const { me } = useSelector((state) => state.user);\n  const { mainPosts, hasMorePosts, loadPostsLoading, retweetError } = useSelector(\n    (state) => state.post,\n  );\n\n  useEffect(() => {\n    if (retweetError) {\n      alert(retweetError);\n    }\n  }, [retweetError]);\n\n  useEffect(() => {\n    dispatch({\n      type: LOAD_MY_INFO_REQUEST,\n    });\n    dispatch({\n      type: LOAD_POSTS_REQUEST,\n    });\n  }, []);\n\n  useEffect(() => {\n    function onScroll() {\n      // console.log(\n      //   window.scrollY,\n      //   document.documentElement.clientHeight,\n      //   document.documentElement.scrollHeight,\n      //   -300,\n      // );\n      if (\n        window.scrollY + document.documentElement.clientHeight >\n        document.documentElement.scrollHeight - 300\n      ) {\n        if (hasMorePosts && !loadPostsLoading) {\n          const lastId = mainPosts[mainPosts.length - 1].id;\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            lastId,\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePosts, loadPostsLoading]);\n\n  return (\n    <AppLayout>\n      {me && <PostForm />}\n      {mainPosts.map((post) => {\n        return <PostCard key={post.id} post={post} />;\n      })}\n    </AppLayout>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}