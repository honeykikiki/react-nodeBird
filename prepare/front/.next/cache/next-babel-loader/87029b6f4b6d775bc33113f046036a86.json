{"ast":null,"code":"import { all, delay, fork, put, takeLatest, throttle, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, REMOVE_POST_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE, LIKE_POST_REQUEST, LIKE_POST_SUCCESS, LIKE_POST_FAILURE, UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_FAILURE, RETWEET_REQUEST, RETWEET_SUCCESS, RETWEET_FAILURE } from '../reducers/post';\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\n\nfunction retweetAPI(data) {\n  return axios.post(`/post/${data}/retweet`, data);\n}\n\nfunction* retweet(action) {\n  try {\n    const result = yield call(retweetAPI, action.data);\n    yield put({\n      type: RETWEET_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: RETWEET_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction upLoadImagesAPI(data) {\n  return axios.post(`/post/images`, data);\n}\n\nfunction* upLoadImages(action) {\n  try {\n    const result = yield call(upLoadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LIKE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unlikePostAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\n\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadPostsAPI(data) {\n  return axios.get('/posts', data);\n}\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI, action.data);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post('/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data); // POST /post/1/comment\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.log(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLoadPosts() {\n  yield throttle(2000, LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchRetweet() {\n  yield takeLatest(RETWEET_REQUEST, retweet);\n}\n\nfunction* watchupLoadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, upLoadImages);\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchUnLikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchRetweet), fork(watchupLoadImages), fork(watchLikePost), fork(watchUnLikePost), fork(watchAddPost), fork(watchAddComment), fork(watchRemovePost), fork(watchLoadPosts)]);\n}","map":{"version":3,"sources":["/Users/heoseongjin/Desktop/node_bird/prepare/front/sagas/post.js"],"names":["all","delay","fork","put","takeLatest","throttle","call","axios","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","REMOVE_POST_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","retweetAPI","data","post","retweet","action","result","type","err","error","response","upLoadImagesAPI","upLoadImages","likePostAPI","patch","likePost","unlikePostAPI","delete","unlikePost","loadPostsAPI","get","loadPosts","addPostAPI","addPost","id","removePostAPI","removePost","addCommentAPI","postId","addComment","console","log","watchLoadPosts","watchRetweet","watchupLoadImages","watchLikePost","watchUnLikePost","watchAddPost","watchRemovePost","watchAddComment","postSaga"],"mappings":"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","sourcesContent":["import { all, delay, fork, put, takeLatest, throttle, call } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport {\n  ADD_POST_SUCCESS,\n  ADD_POST_FAILURE,\n  ADD_POST_REQUEST,\n  REMOVE_POST_SUCCESS,\n  REMOVE_POST_FAILURE,\n  REMOVE_POST_REQUEST,\n  ADD_COMMENT_SUCCESS,\n  ADD_COMMENT_FAILURE,\n  ADD_COMMENT_REQUEST,\n  LOAD_POSTS_REQUEST,\n  LOAD_POSTS_SUCCESS,\n  LOAD_POSTS_FAILURE,\n  LIKE_POST_REQUEST,\n  LIKE_POST_SUCCESS,\n  LIKE_POST_FAILURE,\n  UNLIKE_POST_REQUEST,\n  UNLIKE_POST_SUCCESS,\n  UNLIKE_POST_FAILURE,\n  UPLOAD_IMAGES_REQUEST,\n  UPLOAD_IMAGES_SUCCESS,\n  UPLOAD_IMAGES_FAILURE,\n  RETWEET_REQUEST,\n  RETWEET_SUCCESS,\n  RETWEET_FAILURE,\n} from '../reducers/post';\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\n\nfunction retweetAPI(data) {\n  return axios.post(`/post/${data}/retweet`, data);\n}\n\nfunction* retweet(action) {\n  try {\n    const result = yield call(retweetAPI, action.data);\n    yield put({\n      type: RETWEET_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: RETWEET_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction upLoadImagesAPI(data) {\n  return axios.post(`/post/images`, data);\n}\n\nfunction* upLoadImages(action) {\n  try {\n    const result = yield call(upLoadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LIKE_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction unlikePostAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\n\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadPostsAPI(data) {\n  return axios.get('/posts', data);\n}\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI, action.data);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post('/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data,\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id,\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data,\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data); // POST /post/1/comment\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.log(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchLoadPosts() {\n  yield throttle(2000, LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchRetweet() {\n  yield takeLatest(RETWEET_REQUEST, retweet);\n}\n\nfunction* watchupLoadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, upLoadImages);\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchUnLikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([\n    fork(watchRetweet),\n    fork(watchupLoadImages),\n    fork(watchLikePost),\n    fork(watchUnLikePost),\n    fork(watchAddPost),\n    fork(watchAddComment),\n    fork(watchRemovePost),\n    fork(watchLoadPosts),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}