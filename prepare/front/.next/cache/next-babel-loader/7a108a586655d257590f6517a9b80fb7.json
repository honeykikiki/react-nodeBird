{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/heoseongjin/Desktop/node_bird/prepare/front/pages/hashtag/[tag].js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n//hashtag//[tag].js\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../../reducers/post';\nimport PostCard from '../../components/PostCard';\nimport AppLayout from '../../components/AppLayout';\n\nvar Hashtag = function Hashtag() {\n  _s();\n\n  var dispatch = useDispatch();\n  var router = useRouter();\n  var tag = router.query.tag;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts,\n      hasMorePosts = _useSelector.hasMorePosts,\n      loadHashtagPostsLoading = _useSelector.loadHashtagPostsLoading;\n\n  useEffect(function () {\n    var onScroll = function onScroll() {\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadHashtagPostsLoading) {\n          dispatch({\n            type: LOAD_HASHTAG_POSTS_REQUEST,\n            lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\n            data: tag\n          });\n        }\n      }\n    };\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts.length, hasMorePosts, tag]);\n  return __jsx(AppLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, mainPosts.map(function (c) {\n    return __jsx(PostCard, {\n      key: c.id,\n      post: c,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    });\n  }));\n};\n\n_s(Hashtag, \"l7UKOUKhSNrOzt6nHkqFvRF25Cg=\", false, function () {\n  return [useDispatch, useRouter, useSelector];\n});\n\n_c = Hashtag;\nexport var __N_SSP = true;\nexport default Hashtag;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hashtag\");","map":{"version":3,"sources":["/Users/heoseongjin/Desktop/node_bird/prepare/front/pages/hashtag/[tag].js"],"names":["React","useEffect","useDispatch","useSelector","useRouter","LOAD_HASHTAG_POSTS_REQUEST","PostCard","AppLayout","Hashtag","dispatch","router","tag","query","state","post","mainPosts","hasMorePosts","loadHashtagPostsLoading","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","type","lastId","length","id","data","addEventListener","removeEventListener","map","c"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,SAAT,QAA0B,aAA1B;AAGA,SAASC,0BAAT,QAA2C,qBAA3C;AAEA,OAAOC,QAAP,MAAqB,2BAArB;AAEA,OAAOC,SAAP,MAAsB,4BAAtB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AACpB,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,MAAMQ,MAAM,GAAGN,SAAS,EAAxB;AACA,MAAQO,GAAR,GAAgBD,MAAM,CAACE,KAAvB,CAAQD,GAAR;;AACA,qBAA6DR,WAAW,CAAC,UAACU,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAAxE;AAAA,MAAQC,SAAR,gBAAQA,SAAR;AAAA,MAAmBC,YAAnB,gBAAmBA,YAAnB;AAAA,MAAiCC,uBAAjC,gBAAiCA,uBAAjC;;AAEAhB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMiB,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,UACEC,MAAM,CAACC,WAAP,GAAqBC,QAAQ,CAACC,eAAT,CAAyBC,YAA9C,GACAF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAF1C,EAGE;AACA,YAAIR,YAAY,IAAI,CAACC,uBAArB,EAA8C;AAC5CR,UAAAA,QAAQ,CAAC;AACPgB,YAAAA,IAAI,EAAEpB,0BADC;AAEPqB,YAAAA,MAAM,EAAEX,SAAS,CAACA,SAAS,CAACY,MAAV,GAAmB,CAApB,CAAT,IAAmCZ,SAAS,CAACA,SAAS,CAACY,MAAV,GAAmB,CAApB,CAAT,CAAgCC,EAFpE;AAGPC,YAAAA,IAAI,EAAElB;AAHC,WAAD,CAAR;AAKD;AACF;AACF,KAbD;;AAcAQ,IAAAA,MAAM,CAACW,gBAAP,CAAwB,QAAxB,EAAkCZ,QAAlC;AACA,WAAO,YAAM;AACXC,MAAAA,MAAM,CAACY,mBAAP,CAA2B,QAA3B,EAAqCb,QAArC;AACD,KAFD;AAGD,GAnBQ,EAmBN,CAACH,SAAS,CAACY,MAAX,EAAmBX,YAAnB,EAAiCL,GAAjC,CAnBM,CAAT;AAqBA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,SAAS,CAACiB,GAAV,CAAc,UAACC,CAAD;AAAA,WACb,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,CAAC,CAACL,EAAjB;AAAqB,MAAA,IAAI,EAAEK,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADa;AAAA,GAAd,CADH,CADF;AAOD,CAlCD;;GAAMzB,O;UACaN,W,EACFE,S,EAE8CD,W;;;KAJzDK,O;;AAqDN,eAAeA,OAAf","sourcesContent":["//hashtag//[tag].js\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { END } from 'redux-saga';\nimport { useRouter } from 'next/router';\n\nimport axios from 'axios';\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../../reducers/post';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\nimport PostCard from '../../components/PostCard';\nimport wrapper from '../../store/configureStore';\nimport AppLayout from '../../components/AppLayout';\n\nconst Hashtag = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const { tag } = router.query;\n  const { mainPosts, hasMorePosts, loadHashtagPostsLoading } = useSelector((state) => state.post);\n\n  useEffect(() => {\n    const onScroll = () => {\n      if (\n        window.pageYOffset + document.documentElement.clientHeight >\n        document.documentElement.scrollHeight - 300\n      ) {\n        if (hasMorePosts && !loadHashtagPostsLoading) {\n          dispatch({\n            type: LOAD_HASHTAG_POSTS_REQUEST,\n            lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\n            data: tag,\n          });\n        }\n      }\n    };\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts.length, hasMorePosts, tag]);\n\n  return (\n    <AppLayout>\n      {mainPosts.map((c) => (\n        <PostCard key={c.id} post={c} />\n      ))}\n    </AppLayout>\n  );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps((store) => async ({ req, params }) => {\n  const cookie = req ? req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n  if (req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n  store.dispatch({\n    type: LOAD_HASHTAG_POSTS_REQUEST,\n    data: params.tag,\n  });\n  store.dispatch({\n    type: LOAD_MY_INFO_REQUEST,\n  });\n  store.dispatch(END);\n  await store.sagaTask.toPromise();\n});\n\nexport default Hashtag;\n"]},"metadata":{},"sourceType":"module"}