{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createMiddleWare from 'redux-saga';\nimport reducer from '../reducers';\nimport rootSaga from '../sagas';\n\nvar loggerMiddelWare = function loggerMiddelWare(_ref) {\n  var dispatch = _ref.dispatch,\n      getState = _ref.getState;\n  return function () {\n    return function (action) {\n      console.log(action); // next(action);\n    };\n  };\n};\n\nvar configureStore = function configureStore() {\n  var sagaMiddleware = createMiddleWare();\n  var middlewares = [sagaMiddleware, loggerMiddelWare];\n  var ebhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, ebhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: false\n});\nexport default wrapper;","map":{"version":3,"sources":["/Users/heoseongjin/Desktop/node_bird/prepare/front/store/configureStore.js"],"names":["createWrapper","applyMiddleware","compose","createStore","composeWithDevTools","createMiddleWare","reducer","rootSaga","loggerMiddelWare","dispatch","getState","action","console","log","configureStore","sagaMiddleware","middlewares","ebhancer","store","sagaTask","run","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,gBAAP,MAA6B,YAA7B;AAEA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,IAAMC,gBAAgB,GACpB,SADIA,gBACJ;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,MAAaC,QAAb,QAAaA,QAAb;AAAA,SACA;AAAA,WACA,UAACC,MAAD,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EADU,CAEV;AACD,KAJD;AAAA,GADA;AAAA,CADF;;AAQA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,MAAMC,cAAc,GAAGV,gBAAgB,EAAvC;AACA,MAAMW,WAAW,GAAG,CAACD,cAAD,EAAiBP,gBAAjB,CAApB;AACA,MAAMS,QAAQ,GACZ,QACIf,OAAO,CAACD,eAAe,MAAf,SAAmBe,WAAnB,CAAD,CADX,GAEIZ,mBAAmB,CAACH,eAAe,MAAf,SAAmBe,WAAnB,CAAD,CAHzB;AAKA,MAAME,KAAK,GAAGf,WAAW,CAACG,OAAD,EAAUW,QAAV,CAAzB;AACAC,EAAAA,KAAK,CAACC,QAAN,GAAiBJ,cAAc,CAACK,GAAf,CAAmBb,QAAnB,CAAjB;AAEA,SAAOW,KAAP;AACD,CAZD;;AAcA,IAAMG,OAAO,GAAGrB,aAAa,CAACc,cAAD,EAAiB;AAC5CQ,EAAAA,KAAK;AADuC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport createMiddleWare from 'redux-saga';\n\nimport reducer from '../reducers';\nimport rootSaga from '../sagas';\n\nconst loggerMiddelWare =\n  ({ dispatch, getState }) =>\n  () =>\n  (action) => {\n    console.log(action);\n    // next(action);\n  };\n\nconst configureStore = () => {\n  const sagaMiddleware = createMiddleWare();\n  const middlewares = [sagaMiddleware, loggerMiddelWare];\n  const ebhancer =\n    process.env.NODE_ENV === 'production'\n      ? compose(applyMiddleware(...middlewares))\n      : composeWithDevTools(applyMiddleware(...middlewares));\n\n  const store = createStore(reducer, ebhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: process.env.NODE_ENV === 'devlopment',\n});\n\nexport default wrapper;\n"]},"metadata":{},"sourceType":"module"}