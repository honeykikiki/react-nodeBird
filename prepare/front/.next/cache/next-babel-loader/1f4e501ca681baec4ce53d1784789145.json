{"ast":null,"code":"var _jsxFileName = \"/Users/heoseongjin/Desktop/node_bird/prepare/front/pages/post/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\n\nconst Post = () => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, id, \"\\uBC88 \\uAC8C\\uC2DC\\uBB3C\"));\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(store => async ({\n  req\n}) => {\n  // 로그인이 풀리는 현상, 서버에서 공유하지 않는 쿠키만들기\n  const cookie = req ? req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  store.dispatch(END);\n  await store.sagaTask.toPromise();\n});\nexport default Post;","map":{"version":3,"sources":["/Users/heoseongjin/Desktop/node_bird/prepare/front/pages/post/[id].js"],"names":["useRouter","axios","END","LOAD_MY_INFO_REQUEST","Post","router","id","query","getServerSideProps","wrapper","store","req","cookie","headers","defaults","Cookie","dispatch","type","sagaTask","toPromise"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,YAApB;AAEA,SAASC,oBAAT,QAAqC,qBAArC;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAM;AAAEM,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB;AAEA,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMD,EAAN,8BADF,CADF;AAKD,CATD;;AAWA,OAAO,MAAME,kBAAkB,GAAGC,OAAO,CAACD,kBAAR,CAA4BE,KAAD,IAAW,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAmB;AACzF;AACA,QAAMC,MAAM,GAAGD,GAAG,GAAGA,GAAG,CAACE,OAAJ,CAAYD,MAAf,GAAwB,EAA1C;AACAX,EAAAA,KAAK,CAACa,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgC,EAAhC;;AACA,MAAIJ,GAAG,IAAIC,MAAX,EAAmB;AACjBX,IAAAA,KAAK,CAACa,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgCH,MAAhC;AACD;;AACDF,EAAAA,KAAK,CAACM,QAAN,CAAe;AACbC,IAAAA,IAAI,EAAEd;AADO,GAAf;AAGAO,EAAAA,KAAK,CAACM,QAAN,CAAed,GAAf;AACA,QAAMQ,KAAK,CAACQ,QAAN,CAAeC,SAAf,EAAN;AACD,CAZiC,CAA3B;AAcP,eAAef,IAAf","sourcesContent":["import { useRouter } from 'next/router';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\n\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\n\nconst Post = () => {\n  const router = useRouter();\n  const { id } = router.query;\n\n  return (\n    <>\n      <div>{id}번 게시물</div>\n    </>\n  );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps((store) => async ({ req }) => {\n  // 로그인이 풀리는 현상, 서버에서 공유하지 않는 쿠키만들기\n  const cookie = req ? req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n  if (req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n  store.dispatch({\n    type: LOAD_MY_INFO_REQUEST,\n  });\n  store.dispatch(END);\n  await store.sagaTask.toPromise();\n});\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}