{"ast":null,"code":"import { all, delay, fork, put, take, takeEvery, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST } from '../reducers/post';\n\nfunction addPostAPI(action) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_POST_SUCCESS // data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost)]);\n}","map":{"version":3,"sources":["/Users/heoseongjin/Desktop/node_bird/prepare/front/sagas/post.js"],"names":["all","delay","fork","put","take","takeEvery","takeLatest","axios","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","addPostAPI","action","post","data","addPost","type","err","response","watchAddPost","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,KAAd,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,IAAhC,EAAsCC,SAAtC,EAAiDC,UAAjD,QAAmE,oBAAnE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,gBAAT,EAA2BC,gBAA3B,EAA6CC,gBAA7C,QAAqE,kBAArE;;AAEA,SAASC,UAAT,CAAoBC,MAApB,EAA4B;AAC1B,SAAOL,KAAK,CAACM,IAAN,CAAW,WAAX,EAAwBC,IAAxB,CAAP;AACD;;AAED,UAAUC,OAAV,CAAkBH,MAAlB,EAA0B;AACxB,MAAI;AACF;AACA,UAAMX,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACRa,MAAAA,IAAI,EAAER,gBADE,CAER;;AAFQ,KAAD,CAAT;AAID,GAPD,CAOE,OAAOS,GAAP,EAAY;AACZ,UAAMd,GAAG,CAAC;AACRa,MAAAA,IAAI,EAAEP,gBADE;AAERK,MAAAA,IAAI,EAAEG,GAAG,CAACC,QAAJ,CAAaJ;AAFX,KAAD,CAAT;AAID;AACF;;AAED,UAAUK,YAAV,GAAyB;AACvB,QAAMb,UAAU,CAACI,gBAAD,EAAmBK,OAAnB,CAAhB;AACD;;AAED,eAAe,UAAUK,QAAV,GAAqB;AAClC,QAAMpB,GAAG,CAAC,CAACE,IAAI,CAACiB,YAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { all, delay, fork, put, take, takeEvery, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport { ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST } from '../reducers/post';\n\nfunction addPostAPI(action) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      // data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost)]);\n}\n"]},"metadata":{},"sourceType":"module"}