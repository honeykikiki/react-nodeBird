{"ast":null,"code":"var _jsxFileName = \"/Users/heoseongjin/Desktop/node_bird/prepare/front/pages/hashtag/[tag].js\";\nvar __jsx = React.createElement;\n// hashtag/[tag].js\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport { LOAD_HASHTAG_POSTS_REQUEST, LOAD_POSTS_REQUEST } from '../../reducers/post';\nimport PostCard from '../../components/PostCard';\nimport wrapper from '../../store/configureStore';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\nimport AppLayout from '../../components/Applayout';\n\nconst Hashtag = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    tag\n  } = router.query;\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostsLoading\n  } = useSelector(state => state.post);\n  const [ref, inView] = useInView();\n  useEffect(() => {\n    if (inView && hasMorePosts && !loadPostsLoading) {\n      var _mainPosts;\n\n      const lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n      dispatch({\n        type: LOAD_POSTS_REQUEST,\n        lastId,\n        data: tag\n      });\n    }\n  }, [inView, hasMorePosts, loadPostsLoading, mainPosts, tag]);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, mainPosts.map(c => __jsx(PostCard, {\n    key: c.id,\n    post: c,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    ref: hasMorePosts && !loadPostsLoading ? ref : undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(store => async ({\n  req,\n  params\n}) => {\n  const cookie = req ? req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  store.dispatch({\n    type: LOAD_HASHTAG_POSTS_REQUEST,\n    data: params.tag\n  });\n  store.dispatch(END);\n  await store.sagaTask.toPromise();\n});\nexport default Hashtag;","map":{"version":3,"sources":["/Users/heoseongjin/Desktop/node_bird/prepare/front/pages/hashtag/[tag].js"],"names":["React","useEffect","useDispatch","useSelector","useRouter","END","axios","LOAD_HASHTAG_POSTS_REQUEST","LOAD_POSTS_REQUEST","PostCard","wrapper","LOAD_MY_INFO_REQUEST","AppLayout","Hashtag","dispatch","router","tag","query","mainPosts","hasMorePosts","loadPostsLoading","state","post","ref","inView","useInView","lastId","length","id","type","data","map","c","undefined","getServerSideProps","store","req","params","cookie","headers","defaults","Cookie","sagaTask","toPromise"],"mappings":"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","sourcesContent":["// hashtag/[tag].js\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { END } from 'redux-saga';\n\nimport axios from 'axios';\nimport { LOAD_HASHTAG_POSTS_REQUEST, LOAD_POSTS_REQUEST } from '../../reducers/post';\nimport PostCard from '../../components/PostCard';\nimport wrapper from '../../store/configureStore';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\nimport AppLayout from '../../components/Applayout';\n\nconst Hashtag = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const { tag } = router.query;\n  const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector((state) => state.post);\n  const [ref, inView] = useInView();\n\n  useEffect(() => {\n    if (inView && hasMorePosts && !loadPostsLoading) {\n      const lastId = mainPosts[mainPosts.length - 1]?.id;\n      dispatch({\n        type: LOAD_POSTS_REQUEST,\n        lastId,\n        data: tag,\n      });\n    }\n  }, [inView, hasMorePosts, loadPostsLoading, mainPosts, tag]);\n\n  return (\n    <AppLayout>\n      {mainPosts.map((c) => (\n        <PostCard key={c.id} post={c} />\n      ))}\n      <div ref={hasMorePosts && !loadPostsLoading ? ref : undefined} />\n    </AppLayout>\n  );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps((store) => async ({ req, params }) => {\n  const cookie = req ? req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n  if (req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n  store.dispatch({\n    type: LOAD_MY_INFO_REQUEST,\n  });\n  store.dispatch({\n    type: LOAD_HASHTAG_POSTS_REQUEST,\n    data: params.tag,\n  });\n  store.dispatch(END);\n  await store.sagaTask.toPromise();\n});\n\nexport default Hashtag;\n"]},"metadata":{},"sourceType":"module"}