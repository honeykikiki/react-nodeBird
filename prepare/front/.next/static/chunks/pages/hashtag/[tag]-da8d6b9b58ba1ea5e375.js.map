{"version":3,"sources":["webpack://_N_E/./pages/hashtag/[tag].js","webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?df23","webpack://_N_E/./components/Applayout.js"],"names":["Hashtag","dispatch","useDispatch","tag","useRouter","query","useSelector","state","post","mainPosts","hasMorePosts","loadPostsLoading","useEffect","lastId","length","id","type","LOAD_POSTS_REQUEST","data","map","c","key","ref","undefined","window","__NEXT_P","push","Global","createGlobalStyle","SerachInput","styled","Input","Search","AppLayout","children","me","user","useInput","serachInput","onChangeSearchInput","onSearch","useCallback","Router","mode","Item","href","enterButton","value","onChange","gutter","xs","md","target","rel"],"mappings":"sQAyDeA,UA5CC,WACd,IAAMC,EAAWC,cAETC,EADOC,sBACQC,MAAfF,IACR,EAAsDG,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAA3EC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,aAAcC,EAAjC,EAAiCA,iBAajC,OAXAC,qBAAU,WACR,GAAIF,IAAiBC,EAAkB,OAC/BE,EAAM,UAAGJ,EAAUA,EAAUK,OAAS,UAAhC,aAAG,EAAiCC,GAChDd,EAAS,CACPe,KAAMC,IACNJ,SACAK,KAAMf,OAGT,CAACO,EAAcC,EAAkBF,EAAWN,IAG7C,EAAC,IAAD,KACGM,EAAUU,KAAI,SAACC,GAAD,OACb,EAAC,IAAD,CAAUC,IAAKD,EAAEL,GAAIP,KAAMY,OAE7B,SAAKE,IAAKZ,IAAiBC,EAAmBW,SAAMC,O,sBClCrDC,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,iBACA,WACE,OAAO,EAAQ,Y,iPCSjBC,EAASC,YAAH,mKAaNC,EAAcC,YAAOC,IAAMC,QAAhB,4EAAGF,CAAH,4BA0DFG,IAtDG,SAAC,GAAiB,IAAfC,EAAe,EAAfA,SACXC,EAAO7B,aAAY,SAACC,GAAD,OAAWA,EAAM6B,QAApCD,GACR,EAA2CE,YAAS,IAApD,mBAAOC,EAAP,KAAoBC,EAApB,KAEMC,EAAWC,uBAAY,WAC3BC,IAAOhB,KAAP,mBAAwBY,MACvB,CAACA,IAEJ,OACE,aACE,EAACX,EAAD,MACA,EAAC,IAAD,CAAMgB,KAAK,cACT,EAAC,IAAKC,KAAN,CAAWvB,IAAI,QACb,EAAC,IAAD,CAAMwB,KAAK,KACT,yCAIJ,EAAC,IAAKD,KAAN,CAAWvB,IAAI,WACb,EAAC,IAAD,CAAMwB,KAAK,YACT,mCAIJ,EAAC,IAAKD,KAAN,CAAWvB,IAAI,UACb,EAACQ,EAAD,CACEiB,aAAW,EACXC,MAAOT,EACPU,SAAUT,EACVC,SAAUA,MAIhB,EAAC,IAAD,CAAKS,OAAQ,GACX,EAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GACT,EAALhB,EAAM,IAAkB,IAAnB,OAER,EAAC,IAAD,CAAKe,GAAI,GAAIC,GAAI,IACdjB,GAEH,EAAC,IAAD,CAAKgB,GAAI,GAAIC,GAAI,GACf,OAAGN,KAAK,0BAA0BO,OAAO,SAASC,IAAI,uBAAtD,iB","file":"static/chunks/pages/hashtag/[tag]-da8d6b9b58ba1ea5e375.js","sourcesContent":["// hashtag/[tag].js\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { END } from 'redux-saga';\n\nimport axios from 'axios';\nimport { LOAD_HASHTAG_POSTS_REQUEST, LOAD_POSTS_REQUEST } from '../../reducers/post';\nimport PostCard from '../../components/PostCard';\nimport wrapper from '../../store/configureStore';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\nimport AppLayout from '../../components/Applayout';\n\nconst Hashtag = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const { tag } = router.query;\n  const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector((state) => state.post);\n\n  useEffect(() => {\n    if (hasMorePosts && !loadPostsLoading) {\n      const lastId = mainPosts[mainPosts.length - 1]?.id;\n      dispatch({\n        type: LOAD_POSTS_REQUEST,\n        lastId,\n        data: tag,\n      });\n    }\n  }, [hasMorePosts, loadPostsLoading, mainPosts, tag]);\n\n  return (\n    <AppLayout>\n      {mainPosts.map((c) => (\n        <PostCard key={c.id} post={c} />\n      ))}\n      <div ref={hasMorePosts && !loadPostsLoading ? ref : undefined} />\n    </AppLayout>\n  );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps((store) => async ({ req, params }) => {\n  const cookie = req ? req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n  if (req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n  store.dispatch({\n    type: LOAD_MY_INFO_REQUEST,\n  });\n  store.dispatch({\n    type: LOAD_HASHTAG_POSTS_REQUEST,\n    data: params.tag,\n  });\n  store.dispatch(END);\n  await store.sagaTask.toPromise();\n});\n\nexport default Hashtag;\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/hashtag/[tag]\",\n      function () {\n        return require(\"private-next-pages/hashtag/[tag].js\");\n      }\n    ]);\n  ","// 레이아웃 파일\nimport React, { useCallback } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport { Menu, Input, Row, Col } from 'antd';\nimport { useSelector } from 'react-redux';\n\nimport Router from 'next/router';\nimport LoginForm from './LoginForm';\nimport UserProfile from './UserProfile';\nimport useInput from '../hooks/useInput';\n\nconst Global = createGlobalStyle`\n  .ant-row{\n    margin-right: 0 !important;\n    margin-left: 0 !important;\n  }\n  .ant-clo:first-child {\n    padding-left:0 !important ;\n  }\n  .ant-col:last-child{\n    padding-right: 0 !important;\n  }\n`;\n\nconst SerachInput = styled(Input.Search)`\n  vertical-align: middle;\n`;\n\nconst AppLayout = ({ children }) => {\n  const { me } = useSelector((state) => state.user);\n  const [serachInput, onChangeSearchInput] = useInput('');\n\n  const onSearch = useCallback(() => {\n    Router.push(`/hashtag/${serachInput}`);\n  }, [serachInput]);\n\n  return (\n    <div>\n      <Global />\n      <Menu mode=\"horizontal\">\n        <Menu.Item key=\"home\">\n          <Link href=\"/\">\n            <a>노드버드</a>\n          </Link>\n        </Menu.Item>\n\n        <Menu.Item key=\"profile\">\n          <Link href=\"/profile\">\n            <a>프로필</a>\n          </Link>\n        </Menu.Item>\n\n        <Menu.Item key=\"search\">\n          <SerachInput\n            enterButton\n            value={serachInput}\n            onChange={onChangeSearchInput}\n            onSearch={onSearch}\n          />\n        </Menu.Item>\n      </Menu>\n      <Row gutter={8}>\n        <Col xs={24} md={6}>\n          {me ? <UserProfile /> : <LoginForm />}\n        </Col>\n        <Col xs={24} md={12}>\n          {children}\n        </Col>\n        <Col xs={24} md={6}>\n          <a href=\"https://www.zerocho.com\" target=\"_blank\" rel=\"noreferrer noopener\">\n            zerocho\n          </a>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nAppLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default AppLayout;\n"],"sourceRoot":""}