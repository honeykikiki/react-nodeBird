{"version":3,"sources":["webpack://_N_E/./components/PostForm.js","webpack://_N_E/./pages/index.js","webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js","webpack://_N_E/./components/Applayout.js"],"names":["PostForm","useSelector","state","post","imagePaths","addPostDone","dispatch","useDispatch","useInput","text","onChangeText","setText","useEffect","onSubmit","useCallback","trim","alert","formData","FormData","forEach","p","append","type","ADD_POST_REQUEST","data","imageInput","useRef","onClickImageUpload","current","click","onChanfeImages","e","console","log","target","files","imageFormData","call","f","UPLOAD_IMAGES_REQUEST","onRemoveImage","index","REMOVE_IMAGE","style","margin","encType","onFinish","TextArea","value","onChange","maxLength","placeholder","name","multiple","hidden","ref","onClick","float","htmlType","map","v","i","key","display","src","width","alt","Home","me","user","mainPosts","hasMorePosts","loadPostsLoading","retweetError","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","length","id","LOAD_POSTS_REQUEST","addEventListener","removeEventListener","PostCard","__NEXT_P","push","Global","createGlobalStyle","SerachInput","styled","Input","Search","AppLayout","children","serachInput","onChangeSearchInput","onSearch","Router","mode","Item","href","enterButton","gutter","xs","md","rel"],"mappings":"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","file":"static/chunks/pages/index-61d89587c2da6883efb4.js","sourcesContent":["import React, { useCallback, useRef, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE, ADD_POST_REQUEST } from '../reducers/post';\nimport useInput from '../hooks/useInput';\n\nconst PostForm = () => {\n  const { imagePaths, addPostDone } = useSelector((state) => state.post);\n\n  const dispatch = useDispatch();\n\n  const [text, onChangeText, setText] = useInput('');\n  // const onChangeText = useCallback((e) => {\n  //   setText(e.target.value);\n  // }, []);\n\n  useEffect(() => {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n\n  const onSubmit = useCallback(() => {\n    if (!text || !text.trim()) {\n      return alert('게시글을 작성하세요');\n    }\n    const formData = new FormData();\n    imagePaths.forEach((p) => {\n      formData.append('image', p);\n    });\n    formData.append('content', text);\n    return dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData,\n    });\n  }, [text, imagePaths]);\n\n  const imageInput = useRef();\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n\n  const onChanfeImages = useCallback((e) => {\n    console.log('images ', e.target.files);\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, (f) => {\n      imageFormData.append('image', f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData,\n    });\n  }, []);\n\n  const onRemoveImage = useCallback(\n    (index) => () => {\n      dispatch({\n        type: REMOVE_IMAGE,\n        data: index,\n      });\n    },\n    [],\n  );\n  return (\n    <Form style={{ margin: '10px 0 20px' }} encType=\"multipart/form-data\" onFinish={onSubmit}>\n      <Input.TextArea\n        value={text}\n        onChange={onChangeText}\n        maxLength={140}\n        placeholder=\"어떤 신기한 일이 있엇나요?\"\n      />\n\n      <div>\n        <input\n          type=\"file\"\n          name=\"image\"\n          multiple\n          hidden\n          ref={imageInput}\n          onChange={onChanfeImages}\n        />\n        <Button onClick={onClickImageUpload}>이미지 업로드</Button>\n        <Button type=\"primary\" style={{ float: 'right' }} htmlType=\"submit\">\n          쨱쨱\n        </Button>\n      </div>\n\n      <div>\n        {imagePaths.map((v, i) => (\n          <div key={v} style={{ display: 'inline-block' }}>\n            <img src={`http://localhost:3065/${v}`} style={{ width: '200px' }} alt={v} />\n            <div>\n              <Button onClick={onRemoveImage(i)}>제거</Button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </Form>\n  );\n};\n\nexport default PostForm;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport AppLayout from '../components/Applayout';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport wrapper from '../store/configureStore';\n\nconst Home = () => {\n  const dispatch = useDispatch();\n\n  const { me } = useSelector((state) => state.user);\n  const { mainPosts, hasMorePosts, loadPostsLoading, retweetError } = useSelector(\n    (state) => state.post,\n  );\n\n  useEffect(() => {\n    if (retweetError) {\n      alert(retweetError);\n    }\n  }, [retweetError]);\n\n  useEffect(() => {\n    function onScroll() {\n      // console.log(\n      //   window.scrollY,\n      //   document.documentElement.clientHeight,\n      //   document.documentElement.scrollHeight,\n      //   -300,\n      // );\n      if (\n        window.scrollY + document.documentElement.clientHeight >\n        document.documentElement.scrollHeight - 300\n      ) {\n        if (hasMorePosts && !loadPostsLoading) {\n          const lastId = mainPosts[mainPosts.length - 1]?.id;\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            lastId,\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePosts, loadPostsLoading, mainPosts]);\n\n  return (\n    <AppLayout>\n      {me && <PostForm />}\n      {mainPosts.map((post) => {\n        return <PostCard key={post.id} post={post} />;\n      })}\n    </AppLayout>\n  );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps((store) => async ({ req }) => {\n  // 로그인이 풀리는 현상, 서버에서 공유하지 않는 쿠ㄱ\n  const cookie = req ? req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n  if (req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n  store.dispatch({\n    type: LOAD_MY_INFO_REQUEST,\n  });\n  store.dispatch({\n    type: LOAD_POSTS_REQUEST,\n  });\n  store.dispatch(END);\n  await store.sagaTask.toPromise();\n});\n\nexport default Home;\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return require(\"private-next-pages/index.js\");\n      }\n    ]);\n  ","// 레이아웃 파일\nimport React, { useCallback } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport { Menu, Input, Row, Col } from 'antd';\nimport { useSelector } from 'react-redux';\n\nimport Router from 'next/router';\nimport LoginForm from './LoginForm';\nimport UserProfile from './UserProfile';\nimport useInput from '../hooks/useInput';\n\nconst Global = createGlobalStyle`\n  .ant-row{\n    margin-right: 0 !important;\n    margin-left: 0 !important;\n  }\n  .ant-clo:first-child {\n    padding-left:0 !important ;\n  }\n  .ant-col:last-child{\n    padding-right: 0 !important;\n  }\n`;\n\nconst SerachInput = styled(Input.Search)`\n  vertical-align: middle;\n`;\n\nconst AppLayout = ({ children }) => {\n  const { me } = useSelector((state) => state.user);\n  const [serachInput, onChangeSearchInput] = useInput('');\n\n  const onSearch = useCallback(() => {\n    Router.push(`/hashtag/${serachInput}`);\n  }, [serachInput]);\n\n  return (\n    <div>\n      <Global />\n      <Menu mode=\"horizontal\">\n        <Menu.Item key=\"home\">\n          <Link href=\"/\">\n            <a>노드버드</a>\n          </Link>\n        </Menu.Item>\n\n        <Menu.Item key=\"profile\">\n          <Link href=\"/profile\">\n            <a>프로필</a>\n          </Link>\n        </Menu.Item>\n\n        <Menu.Item key=\"search\">\n          <SerachInput\n            enterButton\n            value={serachInput}\n            onChange={onChangeSearchInput}\n            onSearch={onSearch}\n          />\n        </Menu.Item>\n      </Menu>\n      <Row gutter={8}>\n        <Col xs={24} md={6}>\n          {me ? <UserProfile /> : <LoginForm />}\n        </Col>\n        <Col xs={24} md={12}>\n          {children}\n        </Col>\n        <Col xs={24} md={6}>\n          <a href=\"https://www.zerocho.com\" target=\"_blank\" rel=\"noreferrer noopener\">\n            zerocho\n          </a>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nAppLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default AppLayout;\n"],"sourceRoot":""}